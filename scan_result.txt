
=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Flx.ahk ===

﻿#SingleInstance force
#Persistent
#NoEnv
#UseHook On          ; لتحسين أداء الاختصارات المعقدة
#InstallKeybdHook    ; لضمان تتبع المفاتيح بشكل جيد
;------------------ Global Settings ------------------
iniFile := A_ScriptDir "\Flx_Settings.ini"
scriptsDir := A_ScriptDir "\Scripts"
if !FileExist(scriptsDir) {
    FileCreateDir, %scriptsDir%
}
HotkeyConditions := {} ; لتتبع شروط NoFlxHotkeys

IniRead, monitoredFolders, %iniFile%, Settings, MonitoredFolders, F:\Anime,F:\Movies
IniRead, monitoredFoldersWithSub, %iniFile%, Settings, MonitoredFoldersWithSub, F:\Anime
IniRead, excludedFolders, %iniFile%, Settings, ExcludedFolders, %A_Space%
IniRead, processNames, %iniFile%, Settings, ProcessNames, telegram.exe
IniRead, checkInterval, %iniFile%, Settings, CheckInterval, 1000
IniRead, isSecureMode, %iniFile%, Settings, IsSecureMode, 0
IniRead, baseHotkey, %iniFile%, HotkeySettings, BaseKey, SC056
global baseHotkey

InitSecureModeIndicator()

; التحقق من صلاحية baseHotkey
if (!baseHotkey || baseHotkey = "ERROR") {
    InputBox, baseHotkey, إدخال زر Flx, أدخل رمز المفتاح الأساسي (مثل SC056 أو SC029):,, 300, 150,,,, SC056
    if (ErrorLevel || baseHotkey = "") {
        MsgBox, 48, خطأ, لم يتم إدخال زر Flx صالح. سيتم إنهاء السكربت.
        ExitApp
    }
    IniWrite, %baseHotkey%, %iniFile%, HotkeySettings, BaseKey
}

; إعادة تعريف الاختصارات بناءً على baseHotkey
ReloadHotkeys("")  ; استدعاء ReloadHotkeys بدون oldBaseHotkey لأنه التحميل الأولي

; تعريف الاختصارات الثابتة (للتأكد فقط)
try {
    Hotkey, %baseHotkey%, OpenInteractiveMode, On
    Hotkey, % baseHotkey " & D", ToggleSecureMode, On
    Hotkey, % baseHotkey " & ,", OpenSettings, On
    Hotkey, % baseHotkey " & =", OpenCustomHotkeysGUI, On
} catch e {
    MsgBox, 48, خطأ, فشل تعريف اختصارات Flx الأساسية:`nالسبب: %e%
}

; تحميل الاختصارات البسيطة مع شروط النافذة
CustomHotkeys := {}
IniRead, customKeys, %iniFile%, CustomHotkeys
if (customKeys = "ERROR") {
    customKeys := ""
}
Loop, Parse, customKeys, `n
{
    if (A_LoopField = "")
        continue
    KeyValue := StrSplit(A_LoopField, "=")
    if (KeyValue.Length() >= 2) {
        keyCond := Trim(KeyValue[1])
        keyCond := StrReplace(keyCond, """", "")
        action := Trim(SubStr(A_LoopField, InStr(A_LoopField, "=") + 1))
        if (InStr(keyCond, ";")) {
            keyCond := StrReplace(keyCond, ";", "VKBA")
        }
        SplitKeyCond := StrSplit(keyCond, "|")
        key := SplitKeyCond[1]
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : ""
        fullKey := key . (winCondition ? "|" . winCondition : "")
        if (CustomHotkeys.HasKey(fullKey)) {
            continue
        }
        CustomHotkeys[fullKey] := action
        baseKey := RegExReplace(key, "[+^!#]")
        try {
            Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
        } catch e {
            MsgBox, 48, خطأ, فشل تعريف الاختصار عند التحميل: %baseHotkey% & %baseKey%`nالسبب: %e%
        }
    }
}

; تحميل السكربتات المتقدمة مع شروط النافذة
AdvancedScripts := {}
IniRead, advScripts, %iniFile%, AdvancedScripts
if (advScripts = "ERROR") {
    advScripts := ""
}
Loop, Parse, advScripts, `n
{
    if (A_LoopField = "")
        continue
    KeyValue := StrSplit(A_LoopField, "=")
    if (KeyValue.Length() >= 2) {
        keyCond := Trim(KeyValue[1])
        keyCond := StrReplace(keyCond, """", "")
        scriptPath := Trim(SubStr(A_LoopField, InStr(A_LoopField, "=") + 1))
        if (InStr(keyCond, ";")) {
            keyCond := StrReplace(keyCond, ";", "VKBA")
        }
        SplitKeyCond := StrSplit(keyCond, "|")
        key := SplitKeyCond[1]
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : ""
        fullKey := key . (winCondition ? "|" . winCondition : "")
        if (AdvancedScripts.HasKey(fullKey)) {
            continue
        }
        fullPath := A_ScriptDir "\" scriptPath
        if FileExist(fullPath) {
            AdvancedScripts[fullKey] := scriptPath
            baseKey := RegExReplace(key, "[+^!#]")
            try {
                Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
            } catch e {
                MsgBox, 48, خطأ, فشل تعريف السكربت المتقدم عند التحميل: %baseHotkey% & %baseKey%`nالسبب: %e%
            }
        } else {
            MsgBox, 48, تحذير, ملف السكربت غير موجود: %scriptPath%
        }
    }
}

; تحميل الاختصارات بدون Flx مع شروط النافذة
NoFlxHotkeys := {}
HotkeyConditions := {}
IniRead, noFlxKeys, %iniFile%, NoFlx
if (noFlxKeys = "ERROR") {
    noFlxKeys := ""
}
Loop, Parse, noFlxKeys, `n
{
    if (A_LoopField = "")
        continue
    KeyValue := StrSplit(A_LoopField, "=")
    if (KeyValue.Length() >= 2) {
        keyCond := Trim(KeyValue[1])
        keyCond := StrReplace(keyCond, """", "")
        action := Trim(SubStr(A_LoopField, InStr(A_LoopField, "=") + 1))
        if (InStr(keyCond, ";")) {
            keyCond := StrReplace(keyCond, ";", "VKBA")
        }
        SplitKeyCond := StrSplit(keyCond, "|")
        key := SplitKeyCond[1]
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : ""
        fullKey := key . (winCondition ? "|" . winCondition : "")
        if (NoFlxHotkeys.HasKey(fullKey)) {
            continue
        }
        NoFlxHotkeys[fullKey] := action
        if (!HotkeyConditions.HasKey(key)) {
            HotkeyConditions[key] := {}
        }
        HotkeyConditions[key][fullKey] := winCondition
        try {
            ; تعريف الاختصار مع شرط النافذة إذا وجد
            if (winCondition) {
                Hotkey, IfWinActive, %winCondition%
                Hotkey, %key%, ExecuteNoFlxHotkeyConditional, On
                Hotkey, IfWinActive  ; إعادة تعيين السياق
            } else {
                Hotkey, %key%, ExecuteNoFlxHotkeyConditional, On
            }
        } catch e {
            MsgBox, 48, خطأ, فشل تعريف الاختصار بدون Flx عند التحميل: %key%`nالسبب: %e%
        }
    }
}

; تنفيذ الاختصارات بدون Flx مع التحقق من الشرط
ExecuteNoFlxHotkeyConditional:
    global NoFlxHotkeys, HotkeyConditions, scriptsDir
    keyPressed := A_ThisHotkey
    WinGet, activeExe, ProcessName, A
    currentWinCondition := activeExe ? "ahk_exe " . activeExe : ""
    fullKeyWithCondition := keyPressed . (currentWinCondition ? "|" . currentWinCondition : "")
    fullKeyDefault := keyPressed

    ; التحقق من الاختصار مع الشرط أو بدونه
    if (NoFlxHotkeys.HasKey(fullKeyWithCondition)) {
        action := NoFlxHotkeys[fullKeyWithCondition]
    } else if (NoFlxHotkeys.HasKey(fullKeyDefault)) {
        action := NoFlxHotkeys[fullKeyDefault]
    } else {
        ; إذا لم يكن هناك اختصار مطابق، نترك المفتاح يمر بشكل طبيعي
        return
    }

    ; تنفيذ الإجراء
    if (RegExMatch(action, "\.ahk$")) {
        fullPath := (InStr(action, "\") = 1 || InStr(action, ":") = 2) ? action : scriptsDir "\" action
        if FileExist(fullPath) {
            SetWorkingDir, %scriptsDir%
            Run, %A_AhkPath% "%fullPath%", , UseErrorLevel
            SetWorkingDir, %A_ScriptDir%
            if (A_LastError) {
                MsgBox, 48, خطأ, فشل تشغيل السكربت: %fullPath%`nخطأ: %A_LastError%
            }
        } else {
            MsgBox, 48, خطأ, ملف السكربت غير موجود: %fullPath%
        }
    } else {
        ExecuteSingleAction(action)
    }
return

;------------------ Hotkeys ------------------
; تعريف الاختصارات الثابتة باستخدام baseHotkey
try {
    Hotkey, %baseHotkey%, OpenInteractiveMode, On
    Hotkey, % baseHotkey " & D", ToggleSecureMode, On
    Hotkey, % baseHotkey " & ,", OpenSettings, On
    Hotkey, % baseHotkey " & =", OpenCustomHotkeysGUI, On
} catch e {
    MsgBox, 48, خطأ, فشل تعريف اختصارات Flx الأساسية:`nالسبب: %e%
}

; تعريف الاختصار الإضافي Ctrl+Win+=
^#+=::
OpenCustomHotkeysGUI()
return

;------------------ Functions ------------------

OpenInteractiveMode:
    global baseHotkey
    ; التحقق مما إذا كانت الواجهة مفتوحة بالفعل
    IfWinExist, قائمة الاختصارات
    {
        Gui, InteractiveMenu:Destroy
        return
    }
    ; إذا لم تكن مفتوحة، افتحها
    Gui, InteractiveMenu:Destroy  ; تدمير أي نسخة قديمة للتأكد
    Gui, InteractiveMenu:Color, 2D2D2D
    Gui, InteractiveMenu:Font, c000000 s10, Segoe UI
    Gui, InteractiveMenu:Add, Text, x10 y10 w300 h25 Center cFFD700, اختر اختصارًا
    Gui, InteractiveMenu:Add, ListBox, x10 y40 w300 h230 vSelectedHotkey gExecuteFromMenu, % GenerateHotkeyListForMenu()
    Gui, InteractiveMenu:Show, w320 h270, قائمة الاختصارات
return

GenerateHotkeyListForMenu() {
    global CustomHotkeys, AdvancedScripts, NoFlxHotkeys, baseHotkey
    list := ""
    ; CustomHotkeys
    for fullKey, action in CustomHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := StrReplace(SplitKeyCond[1], "VKBA", ";")
        condition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : ""
        displayText := baseHotkey " & " . key . " - " . action . (condition ? " (" . condition . ")" : "")
        list .= displayText . "|"
    }
    ; AdvancedScripts
    for fullKey, scriptPath in AdvancedScripts {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := StrReplace(SplitKeyCond[1], "VKBA", ";")
        condition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : ""
        displayText := baseHotkey " & " . key . " - " . scriptPath . (condition ? " (" . condition . ")" : "")
        list .= displayText . "|"
    }
    ; NoFlxHotkeys
    for fullKey, action in NoFlxHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := StrReplace(SplitKeyCond[1], "VKBA", ";")
        condition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : ""
        displayText := key . " - " . action . (condition ? " (" . condition . ")" : "")
        list .= displayText . "|"
    }
    return RTrim(list, "|")
}

ExecuteFromMenu:
    global CustomHotkeys, AdvancedScripts, NoFlxHotkeys, baseHotkey, scriptsDir
    Gui, InteractiveMenu:Submit, NoHide
    if (SelectedHotkey = "") {
        return  ; لا تفعل شيئًا إذا لم يتم اختيار شيء
    }
    SplitHotkey := StrSplit(SelectedHotkey, " - ")
    if (SplitHotkey.Length() < 2) {
        MsgBox, 48, خطأ, تنسيق الاختصار غير صالح.
        return
    }
    keyDisplay := SplitHotkey[1]
    actionOrScript := SplitHotkey[2]
    
    ; استخراج الشرط إذا كان موجودًا
    condition := ""
    if (InStr(actionOrScript, "(")) {
        conditionStart := InStr(actionOrScript, "(")
        conditionEnd := InStr(actionOrScript, ")",, -1)
        condition := SubStr(actionOrScript, conditionStart + 1, conditionEnd - conditionStart - 1)
        actionOrScript := Trim(SubStr(actionOrScript, 1, conditionStart - 1))
    }
    
    ; تحديد ما إذا كان الاختصار يستخدم Flx أم لا
    isFlx := InStr(keyDisplay, baseHotkey " & ")
    key := isFlx ? StrReplace(keyDisplay, baseHotkey " & ") : keyDisplay
    fullKey := StrReplace(key, ";", "VKBA") . (condition ? "|" . condition : "")

    ; إغلاق الواجهة أولاً
    Gui, InteractiveMenu:Destroy
    
    ; إضافة تأخير 70 مللي ثانية للسماح للنافذة السابقة بأن تصبح نشطة
    Sleep, 70

    ; تنفيذ الاختصار بناءً على مصدره
    if (isFlx && CustomHotkeys.HasKey(fullKey)) {
        action := CustomHotkeys[fullKey]
        ExecuteSingleAction(action)
    } else if (isFlx && AdvancedScripts.HasKey(fullKey)) {
        scriptPath := AdvancedScripts[fullKey]
        fullPath := A_ScriptDir "\" scriptPath
        if FileExist(fullPath) {
            SetWorkingDir, %scriptsDir%
            Run, %A_AhkPath% "%fullPath%", , UseErrorLevel
            SetWorkingDir, %A_ScriptDir%
            if (A_LastError) {
                MsgBox, 48, خطأ, فشل تشغيل السكربت: %fullPath%`nخطأ: %A_LastError%
            }
        } else {
            MsgBox, 48, خطأ, ملف السكربت غير موجود: %fullPath%
        }
    } else if (!isFlx && NoFlxHotkeys.HasKey(fullKey)) {
        action := NoFlxHotkeys[fullKey]
        ExecuteSingleAction(action)
    } else {
        MsgBox, 48, خطأ, الاختصار غير معرف: %fullKey%
    }
return

CancelInteractiveMenu:
    Gui, InteractiveMenu:Destroy
return

OpenCustomHotkeysGUI() {
    global iniFile, CustomHotkeys, AdvancedScripts, baseHotkey, NoFlxHotkeys, scriptsDir
    Gui, CustomHotkeys:Destroy
    Gui, CustomHotkeys:Color, 2D2D2D
    Gui, CustomHotkeys:Font, cFFFFFF s10, Segoe UI
    Gui, CustomHotkeys:Add, Tab3, x0 y0 w650 h450, أساسي|متقدم
    Gui, CustomHotkeys:Tab, أساسي
    Gui, CustomHotkeys:Add, Text, x20 y50 w610 h30 Center cFFD700, إدارة الاختصارات بسهولة
    Gui, CustomHotkeys:Add, Text, x20 y90 w150 h25, المفتاح (مثل T أو \):
    Gui, CustomHotkeys:Add, Edit, x180 y90 w150 h25 vHotkeyKey c000000 Background424242,
    Gui, CustomHotkeys:Add, Text, x340 y90 w300 h50 cA0A0A0, يمكن استخدام رموز مثل = أو , أيضاً
    Gui, CustomHotkeys:Add, CheckBox, x20 y120 w60 h25 vUseFlx Checked, Flx
    Gui, CustomHotkeys:Add, CheckBox, x90 y120 w60 h25 vUseCtrl, Ctrl
    Gui, CustomHotkeys:Add, CheckBox, x160 y120 w60 h25 vUseShift, Shift
    Gui, CustomHotkeys:Add, CheckBox, x230 y120 w60 h25 vUseAlt, Alt
    Gui, CustomHotkeys:Add, CheckBox, x300 y120 w60 h25 vUseWin, Win
    Gui, CustomHotkeys:Add, Text, x20 y150 w150 h25, النافذة النشطة (اختياري):
    Gui, CustomHotkeys:Add, Edit, x180 y150 w300 h25 vWinCondition c000000 Background424242,
    Gui, CustomHotkeys:Add, Button, x490 y150 w80 h25 gBrowseWinCondition, تصفح
    Gui, CustomHotkeys:Add, Button, x20 y180 w150 h40 gAddAppHotkey, فتح تطبيق
    Gui, CustomHotkeys:Add, Button, x20 y230 w150 h40 gOpenTextInput, إرسال نص
    Gui, CustomHotkeys:Add, Button, x340 y180 w150 h40 gOpenFileHotkey, فتح ملف 
    Gui, CustomHotkeys:Add, Button, x180 y180 w150 h40 gOpenFolderHotkey, فتح مجلد
    Gui, CustomHotkeys:Add, Button, x180 y230 w150 h40 gOpenHotkeyManagerGUI, إدارة الاختصارات
    Gui, CustomHotkeys:Tab, متقدم
    Gui, CustomHotkeys:Add, Text, x20 y50 w610 h30 Center cFFD700, خيارات متقدمة
    Gui, CustomHotkeys:Add, Text, x20 y75 w150 h50, زر الFlx (مثل SC056):
    Gui, CustomHotkeys:Add, Edit, x180 y90 w150 h25 vBaseHotkeyInput c000000 Background424242, %baseHotkey%
    Gui, CustomHotkeys:Add, Button, x340 y90 w150 h25 gSaveBaseHotkey, حفظ زر الFlx
    Gui, CustomHotkeys:Add, Text, x20 y110 w150 h50, المفتاح (مثل T) او اضغط اكتشاف:
    Gui, CustomHotkeys:Add, Edit, x180 y120 w150 h25 vAdvHotkeyKey c000000 Background424242,
    Gui, CustomHotkeys:Add, Button, x340 y120 w100 h25 gDetectKey, اكتشاف المفتاح
    Gui, CustomHotkeys:Add, Text, x450 y120 w190 h50 cA0A0A0, يمكن استخدام رموز مثل = أو , أيضاً
    Gui, CustomHotkeys:Add, CheckBox, x20 y150 w60 h25 vAdvUseFlx Checked, Flx
    Gui, CustomHotkeys:Add, CheckBox, x90 y150 w60 h25 vAdvUseCtrl, Ctrl
    Gui, CustomHotkeys:Add, CheckBox, x160 y150 w60 h25 vAdvUseShift, Shift
    Gui, CustomHotkeys:Add, CheckBox, x230 y150 w60 h25 vAdvUseAlt, Alt
    Gui, CustomHotkeys:Add, CheckBox, x300 y150 w60 h25 vAdvUseWin, Win
    Gui, CustomHotkeys:Add, Text, x20 y180 w150 h25, النافذة النشطة (اختياري):
    Gui, CustomHotkeys:Add, Edit, x180 y180 w300 h25 vAdvWinCondition c000000 Background424242,
    Gui, CustomHotkeys:Add, Button, x490 y180 w80 h25 gBrowseWinConditionAdv, تصفح
    Gui, CustomHotkeys:Add, Text, x20 y210 w150 h25, السكربت (كود AHK كامل):
    Gui, CustomHotkeys:Add, Edit, x180 y210 w300 h80 vAdvHotkeyScript c000000 Background424242 Multi,
    Gui, CustomHotkeys:Add, Button, x490 y210 w80 h25 gBrowseAdvAction, تصفح
    Gui, CustomHotkeys:Add, Text, x20 y300 w150 h25, اختر سكربت موجود:
    Gui, CustomHotkeys:Add, DropDownList, x180 y300 w300 h25 R10 vSelectedScript c000000 Background424242 gLoadSelectedScript, % GetScriptList()
    Gui, CustomHotkeys:Add, Button, x490 y300 w80 h25 gLoadSelectedScript, تحميل
    Gui, CustomHotkeys:Add, Button, x180 y340 w100 h30 gAddAdvHotkey, إضافة
    Gui, CustomHotkeys:Add, Button, x340 y340 w100 h30 gOpenHotkeyManagerGUI, إدارة الإختصارات
    Gui, CustomHotkeys:Show, w650 h450, إدارة الاختصارات
}

GetScriptList() {
    global scriptsDir
    scriptList := ""
    Loop, Files, %scriptsDir%\*.ahk
    {
        SplitPath, A_LoopFileName,,,, scriptName  ; يُرجع الاسم بدون .ahk
        scriptList .= scriptName "|"
    }
    return RTrim(scriptList, "|")
}

LoadSelectedScript:
    Gui, CustomHotkeys:Submit, NoHide
    if (SelectedScript != "") {
        fullPath := scriptsDir "\" SelectedScript ".ahk"
        if FileExist(fullPath) {
            FileRead, scriptContent, %fullPath%
            GuiControl, CustomHotkeys:, AdvHotkeyScript, %scriptContent%  ; عرض المحتوى للتحقق فقط
        } else {
            MsgBox, 48, خطأ, السكربت غير موجود: %fullPath%
        }
    }
return

BrowseWinCondition:
BrowseWinConditionAdv:
    ; تقديم البيانات الحالية للحفاظ على القيمة
    Gui, CustomHotkeys:Submit, NoHide
    ; إخفاء الواجهات الخاصة بالنوافذ المعنية مؤقتًا
    Gui, CustomHotkeys:Hide
    Gui, HotkeyManager:Hide

    MsgBox, 64, تعليمات, انقر على النافذة التي تريد اختيارها بعد الضغط على "موافق". سيتم إخفاء واجهات الاختصارات مؤقتًا للسماح بالاختيار.
    KeyWait, LButton, D T10
    if (ErrorLevel) {
        MsgBox, 48, خطأ, لم يتم النقر على أي نافذة خلال 10 ثوانٍ.
        Gui, CustomHotkeys:Show
        Gui, HotkeyManager:Show
        return
    }
    MouseGetPos,,, windowID
    WinGet, activeExe, ProcessName, ahk_id %windowID%
    if (activeExe) {
        condition := "ahk_exe " . activeExe
        if (A_ThisLabel = "BrowseWinCondition") {
            GuiControl, CustomHotkeys:, WinCondition, %condition%
        } else {
            GuiControl, CustomHotkeys:, AdvWinCondition, %condition%
        }
    } else {
        MsgBox, 48, خطأ, لم يتم العثور على عملية مرتبطة بالنافذة المختارة.
    }
    ; إعادة إظهار الواجهات التي أُخفيت
    Gui, CustomHotkeys:Show
    Gui, HotkeyManager:Show
return

SaveBaseHotkey:
    global baseHotkey, iniFile, CustomHotkeys, AdvancedScripts
    Gui, CustomHotkeys:Submit, NoHide
    if (BaseHotkeyInput = "") {
        MsgBox, 48, خطأ, يرجى إدخال مفتاح أساسي.
        return
    }
    oldBaseHotkey := baseHotkey
    baseHotkey := BaseHotkeyInput
    IniWrite, %baseHotkey%, %iniFile%, HotkeySettings, BaseKey
    ReloadHotkeys(oldBaseHotkey)
    MsgBox, 64, تم, تم تغيير زر الFlx إلى %baseHotkey% وإعادة تعريف الاختصارات بنجاح!
return

ReloadHotkeys(oldBaseHotkey) {
    global baseHotkey, CustomHotkeys, AdvancedScripts, NoFlxHotkeys
    ; تعطيل الاختصارات القديمة لـ CustomHotkeys و AdvancedScripts
    for fullKey in CustomHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := SplitKeyCond[1]
        baseKey := RegExReplace(key, "[+^!#]")
        try {
            Hotkey, % oldBaseHotkey " & " . baseKey, Off
        } catch e {
            ; تجاهل الأخطاء إذا لم يكن معرفًا
        }
    }
    for fullKey in AdvancedScripts {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := SplitKeyCond[1]
        baseKey := RegExReplace(key, "[+^!#]")
        try {
            Hotkey, % oldBaseHotkey " & " . baseKey, Off
        } catch e {
            ; تجاهل الأخطاء
        }
    }
    ; تعطيل الاختصارات الثابتة القديمة
    try {
        Hotkey, %oldBaseHotkey%, Off
        Hotkey, % oldBaseHotkey " & D", Off
        Hotkey, % oldBaseHotkey " & ,", Off
        Hotkey, % oldBaseHotkey " & =", Off
        Hotkey, % oldBaseHotkey " & X", Off
    } catch e {
        ; تجاهل الأخطاء
    }
    ; تفعيل الاختصارات الجديدة لـ CustomHotkeys و AdvancedScripts
    for fullKey in CustomHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := SplitKeyCond[1]
        baseKey := RegExReplace(key, "[+^!#]")
        try {
            Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
        } catch e {
            MsgBox, 48, خطأ, فشل تعريف الاختصار: %baseHotkey% & %baseKey%`nالسبب: %e%
        }
    }
    for fullKey in AdvancedScripts {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := SplitKeyCond[1]
        baseKey := RegExReplace(key, "[+^!#]")
        try {
            Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
        } catch e {
            MsgBox, 48, خطأ, فشل تعريف السكربت المتقدم: %baseHotkey% & %baseKey%`nالسبب: %e%
        }
    }
    ; تفعيل الاختصارات الثابتة الجديدة
    try {
        Hotkey, %baseHotkey%, OpenInteractiveMode, On
        Hotkey, % baseHotkey " & D", ToggleSecureMode, On
        Hotkey, % baseHotkey " & ,", OpenSettings, On
        Hotkey, % baseHotkey " & =", OpenCustomHotkeysGUI, On
    } catch e {
        MsgBox, 48, خطأ, فشل إعادة تعريف الاختصارات الثابتة: %e%
    }
}

DetectKey:
    Gui, CustomHotkeys:+Disabled
    detectedKey := ""
    Loop, 255 {
        scanCode := Format("SC{:03X}", A_Index)
        if GetKeyState(scanCode, "P") {
            detectedKey := scanCode
            break
        }
        vkCode := Format("VK{:02X}", A_Index)
        if GetKeyState(vkCode, "P") {
            detectedKey := vkCode
            break
        }
    }
    if (detectedKey = "") {
        SetTimer, CheckKeyTimeout, 10000
        Loop {
            Loop, 255 {
                scanCode := Format("SC{:03X}", A_Index)
                if GetKeyState(scanCode, "P") {
                    detectedKey := scanCode
                    break 2
                }
                vkCode := Format("VK{:02X}", A_Index)
                if GetKeyState(vkCode, "P") {
                    detectedKey := vkCode
                    break 2
                }
            }
            Sleep, 50
        }
    }
    SetTimer, CheckKeyTimeout, Off
    if (detectedKey = "") {
        MsgBox, 48, خطأ, لم يتم الضغط على أي مفتاح خلال 10 ثوانٍ.
    } else {
        detectedKey := RegExReplace(detectedKey, "[+^!#]")
        GuiControl, CustomHotkeys:, AdvHotkeyKey, %detectedKey%
    }
    Gui, CustomHotkeys:-Disabled
return

CheckKeyTimeout:
    detectedKey := ""
return

GenerateHotkeyList() {
    global CustomHotkeys, AdvancedScripts, NoFlxHotkeys
    hotkeyList := ""
    for fullKey, action in CustomHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := SplitKeyCond[1]
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : "غير محدد"
        hotkeyList .= key . " | " . winCondition . " = " . action . " (Flx)`n"
    }
    for fullKey, script in AdvancedScripts {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := SplitKeyCond[1]
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : "غير محدد"
        hotkeyList .= key . " | " . winCondition . " = " . script . " (Flx)`n"
    }
    for fullKey, action in NoFlxHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := SplitKeyCond[1]
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : "غير محدد"
        hotkeyList .= key . " | " . winCondition . " = " . action . " (NoFlx)`n"
    }
    return hotkeyList
}

AddAppHotkey:
    Gui, CustomHotkeys:Submit, NoHide
    if (HotkeyKey = "") {
        MsgBox, 48, خطأ, يرجى إدخال مفتاح.
        return
    }
    modifierPrefix := (UseFlx ? "" : "") . (UseCtrl ? "^" : "") . (UseShift ? "+" : "") . (UseAlt ? "!" : "") . (UseWin ? "#" : "")
    key := modifierPrefix . HotkeyKey
    fullKey := key . (WinCondition ? "|" . WinCondition : "")
    if (UseFlx && (CustomHotkeys.HasKey(fullKey) || AdvancedScripts.HasKey(fullKey))) {
        oldAction := CustomHotkeys[fullKey] ? CustomHotkeys[fullKey] : AdvancedScripts[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %WinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    } else if (!UseFlx && NoFlxHotkeys.HasKey(fullKey)) {
        oldAction := NoFlxHotkeys[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %WinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    }
    ; نافذة اختيار طريقة الإضافة
    Gui, AppInput:Destroy
    Gui, AppInput:Color, 2D2D2D
    Gui, AppInput:Font, cFFFFFF s10, Segoe UI
    Gui, AppInput:Add, Text, x20 y20 w300 h25, اختر طريقة إضافة التطبيق:
    Gui, AppInput:Add, Button, x20 y50 w150 h30 gBrowseAppFile, اختيار ملف تطبيق
    Gui, AppInput:Add, Button, x180 y50 w150 h30 gManualAppInput, إدخال أمر يدوي
    Gui, AppInput:Add, Button, x100 y90 w100 h30 gCancelAppInput, إلغاء
    Gui, AppInput:Show, w340 h130, إضافة تطبيق للاختصار
return

BrowseAppFile:
    Gui, AppInput:Destroy
    FileSelectFile, selectedFile, 3, , اختر تطبيقًا لفتحه, Executable Files (*.exe)
    if (selectedFile != "") {
        Gui, CustomHotkeys:Submit, NoHide
        if (UseFlx) {
            oldHotkeyCount := CustomHotkeys.Count()
            AddHotkey(HotkeyKey, "Run " . selectedFile, UseCtrl, UseShift, UseAlt, UseWin, UseFlx, WinCondition)
            if (CustomHotkeys.Count() > oldHotkeyCount || CustomHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                MsgBox, 64, تم, تمت إضافة الاختصار بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار.
            }
        } else {
            oldHotkeyCount := NoFlxHotkeys.Count()
            AddNoFlxHotkey(HotkeyKey, "Run " . selectedFile, UseCtrl, UseShift, UseAlt, UseWin, WinCondition)
            if (NoFlxHotkeys.Count() > oldHotkeyCount || NoFlxHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                MsgBox, 64, تم, تمت إضافة الاختصار بدون Flx بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار بدون Flx.
            }
        }
    }
return

ManualAppInput:
    Gui, AppInput:Destroy
    Gui, ManualInput:Destroy
    Gui, ManualInput:Color, 2D2D2D
    Gui, ManualInput:Font, cFFFFFF s10, Segoe UI
    Gui, ManualInput:Add, Text, x20 y20 w300 h25, أدخل أمر التشغيل (مثل explorer.exe shell:...):
    Gui, ManualInput:Add, Edit, x20 y50 w400 h25 vManualCommand c000000 Background424242,
    Gui, ManualInput:Add, Button, x170 y80 w100 h30 gSaveManualCommand, حفظ
    Gui, ManualInput:Add, Button, x280 y80 w100 h30 gCancelManualInput, إلغاء
    Gui, ManualInput:Show, w440 h120, إدخال أمر يدوي
return

SaveManualCommand:
    Gui, ManualInput:Submit
    if (ManualCommand != "") {
        Gui, CustomHotkeys:Submit, NoHide
        if (UseFlx) {
            oldHotkeyCount := CustomHotkeys.Count()
            AddHotkey(HotkeyKey, "Run " . ManualCommand, UseCtrl, UseShift, UseAlt, UseWin, UseFlx, WinCondition)
            if (CustomHotkeys.Count() > oldHotkeyCount || CustomHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                Gui, ManualInput:Destroy
                MsgBox, 64, تم, تمت إضافة الاختصار بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار.
                Gui, ManualInput:Destroy
            }
        } else {
            oldHotkeyCount := NoFlxHotkeys.Count()
            AddNoFlxHotkey(HotkeyKey, "Run " . ManualCommand, UseCtrl, UseShift, UseAlt, UseWin, WinCondition)
            if (NoFlxHotkeys.Count() > oldHotkeyCount || NoFlxHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                Gui, ManualInput:Destroy
                MsgBox, 64, تم, تمت إضافة الاختصار بدون Flx بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار بدون Flx.
                Gui, ManualInput:Destroy
            }
        }
    } else {
        MsgBox, 48, خطأ, يرجى إدخال أمر تشغيل.
    }
return

CancelManualInput:
    Gui, ManualInput:Destroy
return

CancelAppInput:
    Gui, AppInput:Destroy
return
    FileSelectFile, selectedFile, 3, , اختر تطبيقًا لفتحه, Executable Files (*.exe)
    if (selectedFile != "") {
        if (UseFlx) {
            oldHotkeyCount := CustomHotkeys.Count()
            AddHotkey(HotkeyKey, "Run " . selectedFile, UseCtrl, UseShift, UseAlt, UseWin, UseFlx, WinCondition)
            if (CustomHotkeys.Count() > oldHotkeyCount || CustomHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                MsgBox, 64, تم, تمت إضافة الاختصار بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار.
            }
        } else {
            oldHotkeyCount := NoFlxHotkeys.Count()
            AddNoFlxHotkey(HotkeyKey, "Run " . selectedFile, UseCtrl, UseShift, UseAlt, UseWin, WinCondition)
            if (NoFlxHotkeys.Count() > oldHotkeyCount || NoFlxHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                MsgBox, 64, تم, تمت إضافة الاختصار بدون Flx بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار بدون Flx.
            }
        }
    }
return

OpenTextInput:
    Gui, CustomHotkeys:Submit, NoHide
    if (HotkeyKey = "") {
        MsgBox, 48, خطأ, يرجى إدخال مفتاح.
        return
    }
    modifierPrefix := (UseFlx ? "" : "") . (UseCtrl ? "^" : "") . (UseShift ? "+" : "") . (UseAlt ? "!" : "") . (UseWin ? "#" : "")
    key := modifierPrefix . HotkeyKey
    fullKey := key . (WinCondition ? "|" . WinCondition : "")
    if (UseFlx && (CustomHotkeys.HasKey(fullKey) || AdvancedScripts.HasKey(fullKey))) {
        oldAction := CustomHotkeys[fullKey] ? CustomHotkeys[fullKey] : AdvancedScripts[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %WinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    } else if (!UseFlx && NoFlxHotkeys.HasKey(fullKey)) {
        oldAction := NoFlxHotkeys[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %WinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    }
    Gui, TextInput:Destroy
    Gui, TextInput:Color, 2D2D2D
    Gui, TextInput:Font, cFFFFFF s10, Segoe UI
    Gui, TextInput:Add, Text, x20 y20 w150 h25, أدخل النص لإرساله:
    Gui, TextInput:Add, Edit, x180 y20 w300 h25 vTextToSend c000000 Background424242,
    Gui, TextInput:Add, Text, x20 y50 w460 h20 cA0A0A0, ملاحظة: يمكنك أيضًا إدخال إيموجي مثل 😊 أو 👍 هنا
    Gui, TextInput:Add, Button, x180 y80 w100 h30 gSaveTextHotkey, حفظ
    Gui, TextInput:Add, Button, x290 y80 w100 h30 gCancelTextInput, إلغاء
    Gui, TextInput:Show, w500 h120, إرسال نص للاختصار
return

SaveTextHotkey:
    Gui, TextInput:Submit
    if (TextToSend != "") {
        Gui, CustomHotkeys:Submit, NoHide
        if (UseFlx) {
            oldHotkeyCount := CustomHotkeys.Count()
            AddHotkey(HotkeyKey, "Send " . TextToSend, UseCtrl, UseShift, UseAlt, UseWin, UseFlx, WinCondition)
            fullKey := (UseCtrl ? "^" : "") . (UseShift ? "+" : "") . (UseAlt ? "!" : "") . (UseWin ? "#" : "") . HotkeyKey . (WinCondition ? "|" . WinCondition : "")
            if (CustomHotkeys.Count() > oldHotkeyCount || CustomHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                Gui, TextInput:Destroy
                MsgBox, 64, تم, تمت إضافة الاختصار بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار.
                Gui, TextInput:Destroy
            }
        } else {
            oldHotkeyCount := NoFlxHotkeys.Count()
            AddNoFlxHotkey(HotkeyKey, "Send " . TextToSend, UseCtrl, UseShift, UseAlt, UseWin, WinCondition)
            fullKey := (UseCtrl ? "^" : "") . (UseShift ? "+" : "") . (UseAlt ? "!" : "") . (UseWin ? "#" : "") . HotkeyKey . (WinCondition ? "|" . WinCondition : "")
            if (NoFlxHotkeys.Count() > oldHotkeyCount || NoFlxHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                Gui, TextInput:Destroy
                MsgBox, 64, تم, تمت إضافة الاختصار بدون Flx بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار بدون Flx.
                Gui, TextInput:Destroy
            }
        }
    } else {
        MsgBox, 48, خطأ, يرجى إدخال نص.
        Gui, TextInput:Destroy
    }
return

CancelTextInput:
    Gui, TextInput:Destroy
return

OpenFileHotkey:
    Gui, CustomHotkeys:Submit, NoHide
    if (HotkeyKey = "") {
        MsgBox, 48, خطأ, يرجى إدخال مفتاح.
        return
    }
    modifierPrefix := (UseFlx ? "" : "") . (UseCtrl ? "^" : "") . (UseShift ? "+" : "") . (UseAlt ? "!" : "") . (UseWin ? "#" : "")
    key := modifierPrefix . HotkeyKey
    fullKey := key . (WinCondition ? "|" . WinCondition : "")
    if (UseFlx && (CustomHotkeys.HasKey(fullKey) || AdvancedScripts.HasKey(fullKey))) {
        oldAction := CustomHotkeys[fullKey] ? CustomHotkeys[fullKey] : AdvancedScripts[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %WinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    } else if (!UseFlx && NoFlxHotkeys.HasKey(fullKey)) {
        oldAction := NoFlxHotkeys[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %WinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    }
    FileSelectFile, selectedFile, 3, , اختر ملفًا لفتحه, All Files (*.*)
    if (selectedFile != "") {
        if (UseFlx) {
            oldHotkeyCount := CustomHotkeys.Count()
            AddHotkey(HotkeyKey, "Run " . selectedFile, UseCtrl, UseShift, UseAlt, UseWin, UseFlx, WinCondition)
            if (CustomHotkeys.Count() > oldHotkeyCount || CustomHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                MsgBox, 64, تم, تمت إضافة الاختصار لفتح الملف بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار.
            }
        } else {
            oldHotkeyCount := NoFlxHotkeys.Count()
            AddNoFlxHotkey(HotkeyKey, "Run " . selectedFile, UseCtrl, UseShift, UseAlt, UseWin, WinCondition)
            if (NoFlxHotkeys.Count() > oldHotkeyCount || NoFlxHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                MsgBox, 64, تم, تمت إضافة الاختصار بدون Flx لفتح الملف بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار بدون Flx.
            }
        }
    }
return

OpenFolderHotkey:
    Gui, CustomHotkeys:Submit, NoHide
    if (HotkeyKey = "") {
        MsgBox, 48, خطأ, يرجى إدخال مفتاح.
        return
    }
    modifierPrefix := (UseFlx ? "" : "") . (UseCtrl ? "^" : "") . (UseShift ? "+" : "") . (UseAlt ? "!" : "") . (UseWin ? "#" : "")
    key := modifierPrefix . HotkeyKey
    fullKey := key . (WinCondition ? "|" . WinCondition : "")
    if (UseFlx && (CustomHotkeys.HasKey(fullKey) || AdvancedScripts.HasKey(fullKey))) {
        oldAction := CustomHotkeys[fullKey] ? CustomHotkeys[fullKey] : AdvancedScripts[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %WinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    } else if (!UseFlx && NoFlxHotkeys.HasKey(fullKey)) {
        oldAction := NoFlxHotkeys[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %WinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    }
    Gui, FolderInput:Destroy
    Gui, FolderInput:Color, 2D2D2D
    Gui, FolderInput:Font, cFFFFFF s10, Segoe UI
    Gui, FolderInput:Add, Text, x20 y20 w150 h25, أدخل مسار المجلد:
    Gui, FolderInput:Add, Edit, x180 y20 w300 h25 vFolderPath c000000 Background424242,
    Gui, FolderInput:Add, Button, x490 y20 w80 h25 gBrowseFolder, تصفح
    Gui, FolderInput:Add, Button, x180 y60 w100 h30 gSaveFolderHotkey, حفظ
    Gui, FolderInput:Add, Button, x290 y60 w100 h30 gCancelFolderInput, إلغاء
    Gui, FolderInput:Show, w600 h100, فتح مجلد للاختصار
return

BrowseFolder:
    Gui, FolderInput:Submit, NoHide
    FileSelectFolder, selectedFolder, , 3, اختر مجلدًا لفتحه
    if (selectedFolder != "") {
        GuiControl, FolderInput:, FolderPath, %selectedFolder%
    }
return

SaveFolderHotkey:
    Gui, FolderInput:Submit
    if (FolderPath != "") {
        Gui, CustomHotkeys:Submit, NoHide
        if (UseFlx) {
            oldHotkeyCount := CustomHotkeys.Count()
            AddHotkey(HotkeyKey, "Run " . FolderPath, UseCtrl, UseShift, UseAlt, UseWin, UseFlx, WinCondition)
            fullKey := (UseCtrl ? "^" : "") . (UseShift ? "+" : "") . (UseAlt ? "!" : "") . (UseWin ? "#" : "") . HotkeyKey . (WinCondition ? "|" . WinCondition : "")
            if (CustomHotkeys.Count() > oldHotkeyCount || CustomHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                Gui, FolderInput:Destroy
                MsgBox, 64, تم, تمت إضافة الاختصار بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار.
                Gui, FolderInput:Destroy
            }
        } else {
            oldHotkeyCount := NoFlxHotkeys.Count()
            AddNoFlxHotkey(HotkeyKey, "Run " . FolderPath, UseCtrl, UseShift, UseAlt, UseWin, WinCondition)
            fullKey := (UseCtrl ? "^" : "") . (UseShift ? "+" : "") . (UseAlt ? "!" : "") . (UseWin ? "#" : "") . HotkeyKey . (WinCondition ? "|" . WinCondition : "")
            if (NoFlxHotkeys.Count() > oldHotkeyCount || NoFlxHotkeys.HasKey(fullKey)) {
                GuiControl, CustomHotkeys:, HotkeyKey,
                GuiControl, CustomHotkeys:, WinCondition,
                GuiControl, CustomHotkeys:, UseFlx, 1
                GuiControl, CustomHotkeys:, UseCtrl, 0
                GuiControl, CustomHotkeys:, UseShift, 0
                GuiControl, CustomHotkeys:, UseAlt, 0
                GuiControl, CustomHotkeys:, UseWin, 0
                Gui, FolderInput:Destroy
                MsgBox, 64, تم, تمت إضافة الاختصار بدون Flx بنجاح!
            } else {
                MsgBox, 48, خطأ, فشل إضافة الاختصار بدون Flx.
                Gui, FolderInput:Destroy
            }
        }
    } else {
        MsgBox, 48, خطأ, يرجى إدخال مسار مجلد أو اختيار واحد.
        Gui, FolderInput:Destroy
    }
return

CancelFolderInput:
    Gui, FolderInput:Destroy
return
AddAdvHotkey:
    global AdvancedScripts, iniFile, baseHotkey, scriptsDir, NoFlxHotkeys
    Gui, CustomHotkeys:Submit, NoHide
    if (AdvHotkeyKey = "") {
        MsgBox, 48, خطأ, يرجى إدخال مفتاح.
        return
    }
    modifierPrefix := (AdvUseFlx ? "" : "") . (AdvUseCtrl ? "^" : "") . (AdvUseShift ? "+" : "") . (AdvUseAlt ? "!" : "") . (AdvUseWin ? "#" : "")
    key := modifierPrefix . AdvHotkeyKey
    fullKey := key . (AdvWinCondition ? "|" . AdvWinCondition : "")
    
    ; التحقق من وجود الاختصار مسبقًا
    if (AdvUseFlx && (CustomHotkeys.HasKey(fullKey) || AdvancedScripts.HasKey(fullKey))) {
        oldAction := CustomHotkeys[fullKey] ? CustomHotkeys[fullKey] : AdvancedScripts[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %AdvWinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    } else if (!AdvUseFlx && NoFlxHotkeys.HasKey(fullKey)) {
        oldAction := NoFlxHotkeys[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %AdvWinCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
    }

    if (AdvUseFlx) {
        ; [الكود الحالي لـ Flx يبقى كما هو]
        if (SelectedScript != "") {
            scriptPath := "Scripts\" SelectedScript ".ahk"
            fullScriptPath := scriptsDir "\" SelectedScript ".ahk"
            if (!FileExist(fullScriptPath)) {
                MsgBox, 48, خطأ, السكربت المختار غير موجود: %fullScriptPath%
                return
            }
            ; حذف الإدخال القديم إذا كان موجودًا
            if (AdvancedScripts.HasKey(fullKey)) {
                IniDelete, %iniFile%, AdvancedScripts, %fullKey%
            }
            IniWrite, %scriptPath%, %iniFile%, AdvancedScripts, %fullKey%
            AdvancedScripts[fullKey] := scriptPath
            baseKey := RegExReplace(key, "[+^!#]")
            try {
                Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
            } catch e {
                MsgBox, 48, خطأ, فشل تعريف السكربت المتقدم: %baseHotkey% & %baseKey%`nالسبب: %e%
                return
            }
        }
        ; إذا تم إدخال سكربت يدويًا في حقل النص
        else if (AdvHotkeyScript != "") {
            defaultScriptName := AdvHotkeyKey
            InputBox, scriptName, إدخال اسم السكربت, أدخل اسمًا للسكربت (بدون .ahk):,, 300, 150,,,, %defaultScriptName%
            if (ErrorLevel || scriptName = "") {
                return
            }
            if (SubStr(scriptName, -3) != ".ahk") {
                scriptName .= ".ahk"
            }
            scriptPath := "Scripts\" scriptName
            fullScriptPath := scriptsDir "\" scriptName
            for existingKey, existingPath in AdvancedScripts {
                if (existingPath = scriptPath && existingKey != fullKey) {
                    MsgBox, 48, خطأ, اسم السكربت %scriptName% مستخدم بالفعل لاختصار آخر.`nيرجى اختيار اسم مختلف.
                    return
                }
            }
            FileDelete, %fullScriptPath%
            FileAppend, %AdvHotkeyScript%, %fullScriptPath%, UTF-8
            if (ErrorLevel) {
                MsgBox, 48, خطأ, فشل حفظ السكربت في: %fullScriptPath%
                return
            }
            if (AdvancedScripts.HasKey(fullKey)) {
                oldScriptPath := AdvancedScripts[fullKey]
                if (oldScriptPath != scriptPath) {
                    FileDelete, % A_ScriptDir "\" oldScriptPath
                }
                IniDelete, %iniFile%, AdvancedScripts, %fullKey%
            }
            IniWrite, %scriptPath%, %iniFile%, AdvancedScripts, %fullKey%
            AdvancedScripts[fullKey] := scriptPath
            baseKey := RegExReplace(key, "[+^!#]")
            try {
                Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
            } catch e {
                MsgBox, 48, خطأ, فشل تعريف السكربت المتقدم: %baseHotkey% & %baseKey%`nالسبب: %e%
                return
            }
        } else {
            MsgBox, 48, خطأ, يرجى إدخال سكربت أو اختيار واحد من القائمة.
            return
        }
        
        ; إعادة تعيين الحقول بعد الإضافة
        GuiControl, CustomHotkeys:, AdvHotkeyKey,
        GuiControl, CustomHotkeys:, AdvHotkeyScript,
        GuiControl, CustomHotkeys:, AdvWinCondition,
        GuiControl, CustomHotkeys:, AdvUseFlx, 1
        GuiControl, CustomHotkeys:, AdvUseCtrl, 0
        GuiControl, CustomHotkeys:, AdvUseShift, 0
        GuiControl, CustomHotkeys:, AdvUseAlt, 0
        GuiControl, CustomHotkeys:, AdvUseWin, 0
        GuiControl, CustomHotkeys:, SelectedScript, % "|" GetScriptList()
        MsgBox, 64, تم, تمت إضافة السكربت المتقدم بنجاح!
    } else {
        ; إضافة اختصار بدون Flx
        oldHotkeyCount := NoFlxHotkeys.Count()
        if (SelectedScript != "") {
            scriptPath := SelectedScript ".ahk"  ; بدون "Scripts\" هنا
            fullScriptPath := scriptsDir "\" scriptPath
            if (!FileExist(fullScriptPath)) {
                MsgBox, 48, خطأ, السكربت المختار غير موجود: %fullScriptPath%
                return
            }
            AddNoFlxHotkey(AdvHotkeyKey, scriptPath, AdvUseCtrl, AdvUseShift, AdvUseAlt, AdvUseWin, AdvWinCondition)
        } else if (AdvHotkeyScript != "") {
            AddNoFlxHotkey(AdvHotkeyKey, AdvHotkeyScript, AdvUseCtrl, AdvUseShift, AdvUseAlt, AdvUseWin, AdvWinCondition)
        } else {
            MsgBox, 48, خطأ, يرجى إدخال سكربت أو اختيار واحد من القائمة.
            return
        }
        if (NoFlxHotkeys.Count() > oldHotkeyCount || NoFlxHotkeys.HasKey(fullKey)) {
            GuiControl, CustomHotkeys:, AdvHotkeyKey,
            GuiControl, CustomHotkeys:, AdvHotkeyScript,
            GuiControl, CustomHotkeys:, AdvWinCondition,
            GuiControl, CustomHotkeys:, AdvUseFlx, 1
            GuiControl, CustomHotkeys:, AdvUseCtrl, 0
            GuiControl, CustomHotkeys:, AdvUseShift, 0
            GuiControl, CustomHotkeys:, AdvUseAlt, 0
            GuiControl, CustomHotkeys:, AdvUseWin, 0
            GuiControl, CustomHotkeys:, SelectedScript, % "|" GetScriptList()
            MsgBox, 64, تم, تمت إضافة الاختصار بدون Flx بنجاح!
        } else {
            MsgBox, 48, خطأ, فشل إضافة الاختصار بدون Flx.
        }
    }
return

BrowseAdvAction:
    Gui, CustomHotkeys:Submit, NoHide
    FileSelectFile, selectedFile, 3, , اختر ملف سكربت AHK, AutoHotkey Scripts (*.ahk)
    if (selectedFile != "") {
        FileRead, scriptContent, %selectedFile%
        GuiControl, CustomHotkeys:, AdvHotkeyScript, %scriptContent%
    }
return

OpenHotkeyManagerGUI:
    global CustomHotkeys, AdvancedScripts, NoFlxHotkeys, scriptsDir
    Gui, HotkeyManager:Destroy
    Gui, HotkeyManager:Color, 2D2D2D
    Gui, HotkeyManager:Font, cFFFFFF s10, Segoe UI
    Gui, HotkeyManager:Add, Text, x20 y20 w540 h25, قائمة الاختصارات:
    Gui, HotkeyManager:Add, Edit, x20 y50 w440 h25 vSearchTerm gSearchHotkeys c000000 Background424242,
    Gui, HotkeyManager:Add, Button, x470 y50 w90 h25 gSearchHotkeys, بحث
    Gui, HotkeyManager:Add, ListView, x20 y80 w540 h200 vHotkeyList gHotkeyListEvent -Multi +Grid +LV0x10000 Background2D2D2D, المفتاح|النافذة|الإجراء|النوع
    Gui, HotkeyManager:Add, Button, x20 y290 w150 h30 gManageUnusedScripts, إدارة السكربتات غير المستخدمة
    Gui, HotkeyManager:Add, Button, x180 y290 w100 h30 gDeleteSelectedHotkeys, حذف المحدد
    Gui, HotkeyManager:Add, Button, x300 y290 w100 h30 gEditSelectedHotkey, تعديل
    Gui, HotkeyManager:Add, Button, x420 y290 w100 h30 gCancelHotkeyManager, إلغاء
    for fullKey, action in CustomHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := StrReplace(SplitKeyCond[1], "VKBA", ";")
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : "غير محدد"
        LV_Add("", key, winCondition, action, "بسيط (Flx)")
    }
    for fullKey, script in AdvancedScripts {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := StrReplace(SplitKeyCond[1], "VKBA", ";")
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : "غير محدد"
        fullPath := (InStr(script, "\") = 1 || InStr(script, ":") = 2) ? script : scriptsDir "\" script
        displayScript := FileExist(fullPath) ? script : script . " (غير موجود)"
        LV_Add("", key, winCondition, displayScript, "متقدم (Flx)")
    }
    for fullKey, action in NoFlxHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := StrReplace(SplitKeyCond[1], "VKBA", ";")
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : "غير محدد"
        if (RegExMatch(action, "\.ahk$")) {
            fullPath := (InStr(action, "\") = 1 || InStr(action, ":") = 2) ? action : scriptsDir "\" action
            displayAction := FileExist(fullPath) ? action : action . " (غير موجود)"
        } else {
            displayAction := action
        }
        LV_Add("", key, winCondition, displayAction, "بسيط (NoFlx)")
    }
    LV_ModifyCol(1, 50)
    LV_ModifyCol(2, 100)
    LV_ModifyCol(3, 340)
    LV_ModifyCol(4, 50)
    Gui, HotkeyManager:Show, w650 h330, إدارة الاختصارات
return

ManageUnusedScripts:
    global AdvancedScripts, scriptsDir
    Gui, UnusedScripts:Destroy
    Gui, UnusedScripts:Color, 2D2D2D
    Gui, UnusedScripts:Font, cFFFFFF s10, Segoe UI
    Gui, UnusedScripts:Add, Text, x20 y20 w540 h25, السكربتات غير المستخدمة في أي اختصار:
    Gui, UnusedScripts:Add, ListBox, x20 y50 w540 h200 vUnusedScriptList c000000 Background424242, % GetUnusedScriptList()
    Gui, UnusedScripts:Add, Button, x180 y260 w100 h30 gDeleteSelectedUnusedScript, حذف المحدد
    Gui, UnusedScripts:Add, Button, x300 y260 w100 h30 gCancelUnusedScripts, إلغاء
    Gui, UnusedScripts:Show, w600 h300, إدارة السكربتات غير المستخدمة
return

GetUnusedScriptList() {
    global AdvancedScripts, scriptsDir
    usedScripts := {}
    scriptList := ""
    for fullKey, scriptPath in AdvancedScripts {
        usedScripts[scriptPath] := true
    }
    Loop, Files, %scriptsDir%\*.ahk
    {
        scriptPath := "Scripts\" A_LoopFileName
        SplitPath, A_LoopFileName,,,, scriptName
        if (!usedScripts.HasKey(scriptPath)) {
            scriptList .= scriptName "|"
        }
    }
    return RTrim(scriptList, "|")
}

DeleteSelectedUnusedScript:
    Gui, UnusedScripts:Submit, NoHide
    if (UnusedScriptList = "") {
        MsgBox, 48, خطأ, يرجى تحديد سكربت لحذفه.
        return
    }
    fullPath := scriptsDir "\" UnusedScriptList ".ahk"
    MsgBox, 4, تأكيد, هل تريد حذف السكربت "%UnusedScriptList%"؟
    IfMsgBox, Yes
    {
        FileDelete, %fullPath%
        if (ErrorLevel) {
            MsgBox, 48, خطأ, فشل حذف السكربت: %fullPath%
        } else {
            GuiControl, UnusedScripts:, UnusedScriptList, % GetUnusedScriptList()
            MsgBox, 64, تم, تم حذف السكربت بنجاح!
        }
    }
return

CancelUnusedScripts:
    Gui, UnusedScripts:Destroy
return

CancelHotkeyManager:
    Gui, HotkeyManager:Destroy
return

SearchHotkeys:
    Gui, HotkeyManager:Submit, NoHide
    LV_Delete()
    for fullKey, action in CustomHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := StrReplace(SplitKeyCond[1], "VKBA", ";")
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : "غير محدد"
        if (SearchTerm = "" || InStr(key, SearchTerm) || InStr(winCondition, SearchTerm) || InStr(action, SearchTerm)) {
            LV_Add("", key, winCondition, action, "بسيط (Flx)")
        }
    }
    for fullKey, script in AdvancedScripts {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := StrReplace(SplitKeyCond[1], "VKBA", ";")
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : "غير محدد"
        if (SearchTerm = "" || InStr(key, SearchTerm) || InStr(winCondition, SearchTerm) || InStr(script, SearchTerm)) {
            LV_Add("", key, winCondition, script, "متقدم (Flx)")
        }
    }
    for fullKey, action in NoFlxHotkeys {
        SplitKeyCond := StrSplit(fullKey, "|")
        key := StrReplace(SplitKeyCond[1], "VKBA", ";")
        winCondition := SplitKeyCond.Length() > 1 ? SplitKeyCond[2] : "غير محدد"
        if (SearchTerm = "" || InStr(key, SearchTerm) || InStr(winCondition, SearchTerm) || InStr(action, SearchTerm)) {
            LV_Add("", key, winCondition, action, "بسيط (NoFlx)")
        }
    }
    LV_ModifyCol(1, 50)
    LV_ModifyCol(2, 100)
    LV_ModifyCol(3, 340)
    LV_ModifyCol(4, 50)
return

HotkeyListEvent:
    if (A_GuiEvent = "DoubleClick") {
        row := LV_GetNext(0)
        if (row) {
            LV_GetText(selectedKey, row, 1)
            LV_GetText(selectedWinCondition, row, 2)
            LV_GetText(type, row, 4)
            fullSelectedKey := StrReplace(selectedKey, ";", "VKBA") . (selectedWinCondition != "غير محدد" ? "|" . selectedWinCondition : "")
            Gosub, EditSelectedHotkey
        }
    }
return

EditSelectedHotkey:
    row := LV_GetNext(0)
    if (!row) {
        MsgBox, 48, خطأ, يرجى تحديد اختصار لتعديله.
        return
    }
    LV_GetText(selectedKey, row, 1)
    LV_GetText(selectedWinCondition, row, 2)
    LV_GetText(actionOrScript, row, 3)
    LV_GetText(type, row, 4)
    fullSelectedKey := StrReplace(selectedKey, ";", "VKBA") . (selectedWinCondition != "غير محدد" ? "|" . selectedWinCondition : "")
    baseKey := RegExReplace(selectedKey, "[+^!#]")
    Gui, EditHotkey:Destroy
    Gui, EditHotkey:Color, 2D2D2D
    Gui, EditHotkey:Font, cFFFFFF s10, Segoe UI
    Gui, EditHotkey:Add, Text, x20 y20 w150 h25, المفتاح:
    Gui, EditHotkey:Add, Edit, x180 y20 w150 h25 vNewKey c000000 Background424242, %baseKey%
    Gui, EditHotkey:Add, CheckBox, x20 y50 w60 h25 vUseFlx Checked, Flx
    Gui, EditHotkey:Add, CheckBox, x90 y50 w60 h25 vUseCtrl, Ctrl
    Gui, EditHotkey:Add, CheckBox, x160 y50 w60 h25 vUseShift, Shift
    Gui, EditHotkey:Add, CheckBox, x230 y50 w60 h25 vUseAlt, Alt
    Gui, EditHotkey:Add, CheckBox, x300 y50 w60 h25 vUseWin, Win
    Gui, EditHotkey:Add, Text, x20 y80 w150 h25, النافذة النشطة (اختياري):
    Gui, EditHotkey:Add, Edit, x180 y80 w300 h25 vNewWinCondition c000000 Background424242, % (selectedWinCondition != "غير محدد" ? selectedWinCondition : "")
    Gui, EditHotkey:Add, Button, x490 y80 w80 h25 gBrowseWinConditionEdit, تصفح
    if (InStr(type, "بسيط")) {
        Gui, EditHotkey:Add, Text, x20 y110 w150 h25, الإجراء:
        Gui, EditHotkey:Add, Edit, x180 y110 w300 h25 vNewAction c000000 Background424242, %actionOrScript%
    } else {
        Gui, EditHotkey:Add, Text, x20 y110 w150 h25, السكربت:
        Gui, EditHotkey:Add, Edit, x180 y110 w300 h100 vNewAction c000000 Background424242 Multi, %actionOrScript%
        fullPath := A_ScriptDir "\" actionOrScript
        if FileExist(fullPath) {
            FileRead, scriptContent, %fullPath%
            GuiControl, EditHotkey:, NewAction, %scriptContent%
        }
        Gui, EditHotkey:Add, Text, x20 y220 w150 h25, اختر سكربت موجود:
        Gui, EditHotkey:Add, DropDownList, x180 y220 w300 h25 R10 vSelectedScript c000000 Background424242 gLoadSelectedScriptEdit, % GetScriptList()
        Gui, EditHotkey:Add, Button, x490 y220 w80 h25 gLoadSelectedScriptEdit, تحميل
    }
    Gui, EditHotkey:Add, Button, x180 y260 w100 h30 gSaveEditedHotkey, حفظ
    Gui, EditHotkey:Add, Button, x290 y260 w100 h30 gCancelEditHotkey, إلغاء
    Gui, EditHotkey:Add, Button, x400 y260 w100 h30 gDeleteFromEditHotkey, حذف
    if (InStr(type, "متقدم")) {
        Gui, EditHotkey:Add, Button, x180 y300 w100 h30 gOpenScriptLocation, فتح الموقع
    }
    ; تعيين حالة مفاتيح التعديل
    if (InStr(fullSelectedKey, "^"))
        GuiControl, EditHotkey:, UseCtrl, 1
    if (InStr(fullSelectedKey, "+"))
        GuiControl, EditHotkey:, UseShift, 1
    if (InStr(fullSelectedKey, "!"))
        GuiControl, EditHotkey:, UseAlt, 1
    if (InStr(fullSelectedKey, "#"))
        GuiControl, EditHotkey:, UseWin, 1
    if (InStr(type, "NoFlx"))
        GuiControl, EditHotkey:, UseFlx, 0
    else
        GuiControl, EditHotkey:, UseFlx, 1
    Gui, EditHotkey:Show, w600 h340, تعديل الاختصار
return

LoadSelectedScriptEdit:
    Gui, EditHotkey:Submit, NoHide
    if (SelectedScript != "") {
        fullPath := scriptsDir "\" SelectedScript ".ahk"
        if FileExist(fullPath) {
            FileRead, scriptContent, %fullPath%
            GuiControl, EditHotkey:, NewAction, %scriptContent%  ; عرض المحتوى للتحقق فقط
        } else {
            MsgBox, 48, خطأ, السكربت غير موجود: %fullPath%
        }
    }
return

BrowseWinConditionEdit:
    ; تقديم البيانات الحالية للحفاظ على القيمة
    Gui, EditHotkey:Submit, NoHide
    
    ; متغيرات لتتبع حالة النوافذ (true إذا كانت مفتوحة، false إذا لم تكن)
    EditHotkeyVisible := false
    CustomHotkeysVisible := false
    HotkeyManagerVisible := false
    
    ; التحقق من النوافذ المفتوحة باستخدام معرفات دقيقة
    Gui, EditHotkey:+LastFound
    if (WinExist("تعديل الاختصار ahk_id " WinExist()))
        EditHotkeyVisible := true
    
    Gui, CustomHotkeys:+LastFound
    if (WinExist("إدارة الاختصارات ahk_id " WinExist()))
        CustomHotkeysVisible := true
    
    Gui, HotkeyManager:+LastFound
    if (WinExist("إدارة الاختصارات ahk_id " WinExist()))
        HotkeyManagerVisible := true
    
    ; إخفاء جميع النوافذ المعنية مؤقتًا
    Gui, EditHotkey:Hide
    Gui, CustomHotkeys:Hide
    Gui, HotkeyManager:Hide

    MsgBox, 64, تعليمات, انقر على النافذة التي تريد اختيارها بعد الضغط على "موافق". سيتم إخفاء واجهات الاختصارات مؤقتًا للسماح بالاختيار.
    KeyWait, LButton, D T10
    if (ErrorLevel) {
        MsgBox, 48, خطأ, لم يتم النقر على أي نافذة خلال 10 ثوانٍ.
        ; إعادة إظهار النوافذ التي كانت مفتوحة فقط
        if (CustomHotkeysVisible)
            Gui, CustomHotkeys:Show
        if (HotkeyManagerVisible)
            Gui, HotkeyManager:Show
        if (EditHotkeyVisible)
            Gui, EditHotkey:Show
        return
    }
    
    ; الحصول على النافذة التي تم النقر عليها
    MouseGetPos,,, windowID
    WinGet, activeExe, ProcessName, ahk_id %windowID%
    if (activeExe) {
        condition := "ahk_exe " . activeExe
        GuiControl, EditHotkey:, NewWinCondition, %condition%
    } else {
        MsgBox, 48, خطأ, لم يتم العثور على عملية مرتبطة بالنافذة المختارة.
    }
    
    ; إعادة إظهار النوافذ التي كانت مفتوحة فقط
    if (CustomHotkeysVisible)
        Gui, CustomHotkeys:Show
    if (HotkeyManagerVisible)
        Gui, HotkeyManager:Show
    if (EditHotkeyVisible)
        Gui, EditHotkey:Show
return

OpenScriptLocation:
    global AdvancedScripts, fullSelectedKey
    scriptPath := AdvancedScripts[fullSelectedKey]
    if (scriptPath != "") {
        fullPath := A_ScriptDir "\" scriptPath
        SplitPath, fullPath,, dir
        Run, explorer.exe "%dir%"
    } else {
        MsgBox, 48, خطأ, لا يمكن العثور على موقع السكربت.
    }
return

SaveEditedHotkey:
    Gui, EditHotkey:Submit
    if (NewKey = "") {
        MsgBox, 48, خطأ, يرجى إدخال مفتاح.
        Gui, EditHotkey:Destroy
        return
    }
    newKey := StrReplace(NewKey, ";", "VKBA")
    modifierPrefix := (UseFlx ? "" : "") . (UseCtrl ? "^" : "") . (UseShift ? "+" : "") . (UseAlt ? "!" : "") . (UseWin ? "#" : "")
    fullNewKey := modifierPrefix . newKey . (NewWinCondition ? "|" . NewWinCondition : "")
    if (fullNewKey != fullSelectedKey) {
        if (UseFlx && (CustomHotkeys.HasKey(fullNewKey) || AdvancedScripts.HasKey(fullNewKey))) {
            oldAction := CustomHotkeys[fullNewKey] ? CustomHotkeys[fullNewKey] : AdvancedScripts[fullNewKey]
            MsgBox, 4, تحذير, المفتاح %fullNewKey% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
            IfMsgBox, No
                return
        } else if (!UseFlx && NoFlxHotkeys.HasKey(fullNewKey)) {
            oldAction := NoFlxHotkeys[fullNewKey]
            MsgBox, 4, تحذير, المفتاح %fullNewKey% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
            IfMsgBox, No
                return
        }
    }
    if (InStr(type, "Flx")) {
        if (InStr(type, "بسيط")) {
            DeleteHotkeyAction(fullSelectedKey)
            if (UseFlx) {
                AddHotkey(newKey, NewAction, UseCtrl, UseShift, UseAlt, UseWin, UseFlx, NewWinCondition)
            } else {
                AddNoFlxHotkey(newKey, NewAction, UseCtrl, UseShift, UseAlt, UseWin, NewWinCondition)
            }
        } else {
            DeleteAdvancedScript(fullSelectedKey)
            if (UseFlx) {
                if (SelectedScript != "") {
                    ; استخدام السكربت الموجود من القائمة المنسدلة
                    scriptPath := "Scripts\" SelectedScript ".ahk"
                    fullScriptPath := scriptsDir "\" SelectedScript ".ahk"
                    if (!FileExist(fullScriptPath)) {
                        MsgBox, 48, خطأ, السكربت المختار غير موجود: %fullScriptPath%
                        return
                    }
                    IniWrite, %scriptPath%, %iniFile%, AdvancedScripts, %fullNewKey%
                    AdvancedScripts[fullNewKey] := scriptPath
                    baseKey := RegExReplace(newKey, "[+^!#]")
                    try {
                        Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
                    } catch e {
                        MsgBox, 48, خطأ, فشل تعريف السكربت المتقدم: %baseHotkey% & %baseKey%`nالسبب: %e%
                        return
                    }
                } else if (NewAction != "") {
                    ; إدخال سكربت يدويًا
                    defaultScriptName := newKey
                    InputBox, scriptName, إدخال اسم السكربت, أدخل اسمًا للسكربت (بدون .ahk):,, 300, 150,,,, %defaultScriptName%
                    if (ErrorLevel || scriptName = "") {
                        return
                    }
                    if (SubStr(scriptName, -3) != ".ahk") {
                        scriptName .= ".ahk"
                    }
                    scriptPath := "Scripts\" scriptName
                    fullScriptPath := scriptsDir "\" scriptName
                    for existingKey, existingPath in AdvancedScripts {
                        if (existingPath = scriptPath && existingKey != fullNewKey) {
                            MsgBox, 48, خطأ, اسم السكربت %scriptName% مستخدم بالفعل لاختصار آخر.`nيرجى اختيار اسم مختلف.
                            return
                        }
                    }
                    FileDelete, %fullScriptPath%
                    FileAppend, %NewAction%, %fullScriptPath%, UTF-8
                    if (ErrorLevel) {
                        MsgBox, 48, خطأ, فشل حفظ السكربت في: %fullScriptPath%
                        return
                    }
                    IniWrite, %scriptPath%, %iniFile%, AdvancedScripts, %fullNewKey%
                    AdvancedScripts[fullNewKey] := scriptPath
                    baseKey := RegExReplace(newKey, "[+^!#]")
                    try {
                        Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
                    } catch e {
                        MsgBox, 48, خطأ, فشل تعريف السكربت المتقدم: %baseHotkey% & %baseKey%`nالسبب: %e%
                        return
                    }
                } else {
                    MsgBox, 48, خطأ, يرجى إدخال سكربت أو اختيار واحد من القائمة.
                    return
                }
            } else {
                AddNoFlxHotkey(newKey, NewAction, UseCtrl, UseShift, UseAlt, UseWin, NewWinCondition)
            }
        }
    } else {
        DeleteNoFlxHotkey(fullSelectedKey)
        if (UseFlx) {
            if (InStr(type, "بسيط")) {
                AddHotkey(newKey, NewAction, UseCtrl, UseShift, UseAlt, UseWin, UseFlx, NewWinCondition)
            } else {
                if (SelectedScript != "") {
                    scriptPath := "Scripts\" SelectedScript ".ahk"
                    fullScriptPath := scriptsDir "\" SelectedScript ".ahk"
                    if (!FileExist(fullScriptPath)) {
                        MsgBox, 48, خطأ, السكربت المختار غير موجود: %fullScriptPath%
                        return
                    }
                    IniWrite, %scriptPath%, %iniFile%, AdvancedScripts, %fullNewKey%
                    AdvancedScripts[fullNewKey] := scriptPath
                    baseKey := RegExReplace(newKey, "[+^!#]")
                    try {
                        Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
                    } catch e {
                        MsgBox, 48, خطأ, فشل تعريف السكربت المتقدم: %baseHotkey% & %baseKey%`nالسبب: %e%
                        return
                    }
                } else if (NewAction != "") {
                    defaultScriptName := newKey
                    InputBox, scriptName, إدخال اسم السكربت, أدخل اسمًا للسكربت (بدون .ahk):,, 300, 150,,,, %defaultScriptName%
                    if (ErrorLevel || scriptName = "") {
                        return
                    }
                    if (SubStr(scriptName, -3) != ".ahk") {
                        scriptName .= ".ahk"
                    }
                    scriptPath := "Scripts\" scriptName
                    fullScriptPath := scriptsDir "\" scriptName
                    for existingKey, existingPath in AdvancedScripts {
                        if (existingPath = scriptPath && existingKey != fullNewKey) {
                            MsgBox, 48, خطأ, اسم السكربت %scriptName% مستخدم بالفعل لاختصار آخر.`nيرجى اختيار اسم مختلف.
                            return
                        }
                    }
                    FileDelete, %fullScriptPath%
                    FileAppend, %NewAction%, %fullScriptPath%, UTF-8
                    if (ErrorLevel) {
                        MsgBox, 48, خطأ, فشل حفظ السكربت في: %fullScriptPath%
                        return
                    }
                    IniWrite, %scriptPath%, %iniFile%, AdvancedScripts, %fullNewKey%
                    AdvancedScripts[fullNewKey] := scriptPath
                    baseKey := RegExReplace(newKey, "[+^!#]")
                    try {
                        Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
                    } catch e {
                        MsgBox, 48, خطأ, فشل تعريف السكربت المتقدم: %baseHotkey% & %baseKey%`nالسبب: %e%
                        return
                    }
                } else {
                    MsgBox, 48, خطأ, يرجى إدخال سكربت أو اختيار واحد من القائمة.
                    return
                }
            }
        } else {
            AddNoFlxHotkey(newKey, NewAction, UseCtrl, UseShift, UseAlt, UseWin, NewWinCondition)
        }
    }
    Gui, EditHotkey:Destroy
    Gosub, OpenHotkeyManagerGUI
    MsgBox, 64, تم, تم تعديل الاختصار بنجاح!
return

CancelEditHotkey:
    Gui, EditHotkey:Destroy
return

DeleteFromEditHotkey:
    MsgBox, 4, تأكيد, هل تريد حذف الاختصار "%selectedKey%" مع شرط النافذة "%selectedWinCondition%"؟
    IfMsgBox, Yes
    {
        ; استخدام نفس الطريقة في DeleteSelectedHotkeys للتفريق بين الأنواع
        if (InStr(type, "NoFlx"))
        {
            DeleteNoFlxHotkey(fullSelectedKey)
        }
        else if (InStr(type, "بسيط"))
        {
            DeleteHotkeyAction(fullSelectedKey)
        }
        else if (InStr(type, "متقدم"))
        {
            DeleteAdvancedScript(fullSelectedKey)
        }
        Gui, EditHotkey:Destroy
        Gosub, OpenHotkeyManagerGUI
        MsgBox, 64, تم, تم حذف الاختصار بنجاح!
    }
return

DeleteSelectedHotkeys:
    selectedRows := []
    Loop {
        row := LV_GetNext(row ? row : 0)
        if (!row)
            break
        LV_GetText(key, row, 1)
        LV_GetText(winCondition, row, 2)
        LV_GetText(type, row, 4)
        fullKey := StrReplace(key, ";", "VKBA") . (winCondition != "غير محدد" ? "|" . winCondition : "")
        selectedRows.Push({Key: fullKey, Type: type})
    }
    count := selectedRows.Length()
    if (count = 0) {
        MsgBox, 48, خطأ, يرجى تحديد اختصار واحد على الأقل.
        return
    }
    MsgBox, 4, تأكيد, هل تريد حذف %count% عناصر محددة؟
    IfMsgBox, Yes
    {
        for index, item in selectedRows {
            if (InStr(item.Type, "NoFlx")) {
                DeleteNoFlxHotkey(item.Key)
            } else if (InStr(item.Type, "بسيط")) {
                DeleteHotkeyAction(item.Key)
            } else if (InStr(item.Type, "متقدم")) {
                DeleteAdvancedScript(item.Key)
            }
        }
        Gosub, OpenHotkeyManagerGUI
        MsgBox, 64, تم, تم حذف العناصر المحددة بنجاح!
    }
return

DeleteHotkeyAction(fullKey) {
    global iniFile, CustomHotkeys, baseHotkey
    IniDelete, %iniFile%, CustomHotkeys, %fullKey%
    CustomHotkeys.Delete(fullKey)
    SplitKeyCond := StrSplit(fullKey, "|")
    key := SplitKeyCond[1]
    baseKey := RegExReplace(key, "[+^!#]")
    try {
        Hotkey, % baseHotkey " & " . baseKey, Off
    } catch e {
        ; تجاهل الأخطاء إذا لم يكن الاختصار معرفًا
    }
}

DeleteAdvancedScript(fullKey) {
    global iniFile, AdvancedScripts, baseHotkey
    IniDelete, %iniFile%, AdvancedScripts, %fullKey%
    AdvancedScripts.Delete(fullKey)
    SplitKeyCond := StrSplit(fullKey, "|")
    key := SplitKeyCond[1]
    baseKey := RegExReplace(key, "[+^!#]")
    try {
        Hotkey, % baseHotkey " & " . baseKey, Off
    } catch e {
        ; تجاهل الأخطاء
    }
}

DeleteNoFlxHotkey(fullKey) {
    global iniFile, NoFlxHotkeys, HotkeyConditions
    IniDelete, %iniFile%, NoFlx, %fullKey%
    SplitKeyCond := StrSplit(fullKey, "|")
    key := SplitKeyCond[1]
    NoFlxHotkeys.Delete(fullKey)
    if (HotkeyConditions.HasKey(key)) {
        HotkeyConditions[key].Delete(fullKey)
        if (HotkeyConditions[key].Count() = 0) {
            HotkeyConditions.Delete(key)
            try {
                Hotkey, %key%, Off
            } catch e {
                ; تجاهل الأخطاء إذا لم يكن الاختصار معرفًا
            }
        }
    }
}

AddHotkey(key, action, useCtrl := 0, useShift := 0, useAlt := 0, useWin := 0, useFlx := 1, winCondition := "") {
    global iniFile, CustomHotkeys, baseHotkey
    if (key = ";") {
        key := "VKBA"
    } else {
        key := Format("{:U}", key)
    }
    modifierPrefix := (useCtrl ? "^" : "") . (useShift ? "+" : "") . (useAlt ? "!" : "") . (useWin ? "#" : "")
    fullKey := modifierPrefix . key . (winCondition ? "|" . winCondition : "")
    if (CustomHotkeys.HasKey(fullKey)) {
        oldAction := CustomHotkeys[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %winCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
        DeleteHotkeyAction(fullKey)
    } else if (AdvancedScripts.HasKey(fullKey)) {
        oldScript := AdvancedScripts[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %winCondition% مستخدم بالفعل كسكربت متقدم:`n%oldScript%`nهل تريد استبداله؟
        IfMsgBox, No
            return
        DeleteAdvancedScript(fullKey)
    }
    IniWrite, %action%, %iniFile%, CustomHotkeys, %fullKey%
    CustomHotkeys[fullKey] := action
    baseKey := RegExReplace(key, "[+^!#]")
    try {
        Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
    } catch e {
        MsgBox, 48, خطأ, فشل تعريف الاختصار: %baseHotkey% & %baseKey%`nالسبب: %e%
    }
}

AddAdvancedScript(key, script, useCtrl := 0, useShift := 0, useAlt := 0, useWin := 0, defaultName := "", winCondition := "") {
    global iniFile, AdvancedScripts, scriptsDir, baseHotkey
    if (key = ";") {
        key := "VKBA"
    } else {
        key := Format("{:U}", key)
    }
    modifierPrefix := (useCtrl ? "^" : "") . (useShift ? "+" : "") . (useAlt ? "!" : "") . (useWin ? "#" : "")
    fullKey := modifierPrefix . key . (winCondition ? "|" . winCondition : "")
    defaultValue := defaultName ? defaultName : key
    InputBox, scriptName, إدخال اسم السكربت, أدخل اسمًا للسكربت (بدون .ahk):,, 300, 150,,,, %defaultValue%
    if (ErrorLevel || scriptName = "") {
        return 0
    }
    if (SubStr(scriptName, -3) != ".ahk") {
        scriptName .= ".ahk"
    }
    scriptPath := "Scripts\" scriptName
    fullScriptPath := scriptsDir "\" scriptName
    for existingKey, existingPath in AdvancedScripts {
        if (existingPath = scriptPath && existingKey != fullKey) {
            MsgBox, 48, خطأ, اسم السكربت %scriptName% مستخدم بالفعل لاختصار آخر.`nيرجى اختيار اسم مختلف.
            return 0
        }
    }
    FileDelete, %fullScriptPath%
    FileAppend, %script%, %fullScriptPath%, UTF-8
    if (ErrorLevel) {
        MsgBox, 48, خطأ, فشل حفظ السكربت في: %fullScriptPath%
        return 0
    }
    if (AdvancedScripts.HasKey(fullKey)) {
        oldScriptPath := AdvancedScripts[fullKey]
        if (oldScriptPath != scriptPath) {
            FileDelete, % A_ScriptDir "\" oldScriptPath
        }
        IniDelete, %iniFile%, AdvancedScripts, %fullKey%
    }
    IniWrite, %scriptPath%, %iniFile%, AdvancedScripts, %fullKey%
    AdvancedScripts[fullKey] := scriptPath
    baseKey := RegExReplace(key, "[+^!#]")
    try {
        Hotkey, % baseHotkey " & " . baseKey, ExecuteHotkey, On
    } catch e {
        MsgBox, 48, خطأ, فشل تعريف السكربت المتقدم: %baseHotkey% & %baseKey%`nالسبب: %e%
        return 0
    }
    return 1
}

AddNoFlxHotkey(key, action, useCtrl := 0, useShift := 0, useAlt := 0, useWin := 0, winCondition := "") {
    global iniFile, NoFlxHotkeys, HotkeyConditions, scriptsDir
    if (key = ";") {
        key := "VKBA"
    } else {
        key := Format("{:U}", key)
    }
    modifierPrefix := (useCtrl ? "^" : "") . (useShift ? "+" : "") . (useAlt ? "!" : "") . (useWin ? "#" : "")
    fullKey := modifierPrefix . key . (winCondition ? "|" . winCondition : "")
    
    ; التحقق مما إذا كان الإجراء سكربتًا
    if (InStr(action, "`n") || RegExMatch(action, "\.ahk$")) {
        ; حالة السكربت الموجود مسبقًا (مسار ملف)
        if (RegExMatch(action, "\.ahk$") && !InStr(action, "`n")) {
            ; تحديد المسار الكامل
            fullScriptPath := (InStr(action, "\") = 1 || InStr(action, ":") = 2) ? action : scriptsDir "\" action
            if (!FileExist(fullScriptPath)) {
                MsgBox, 48, خطأ, ملف السكربت غير موجود: %fullScriptPath%
                return
            }
            scriptPath := action  ; استخدام المسار كما هو
        }
        ; حالة كود سكربت يدوي (متعدد الأسطر)
        else if (InStr(action, "`n")) {
            defaultValue := key
            InputBox, scriptName, إدخال اسم السكربت, أدخل اسمًا للسكربت (بدون .ahk):,, 300, 150,,,, %defaultValue%
            if (ErrorLevel || scriptName = "") {
                return
            }
            if (SubStr(scriptName, -3) != ".ahk") {
                scriptName .= ".ahk"
            }
            scriptPath := "Scripts\" scriptName
            fullScriptPath := scriptsDir "\" scriptName
            
            ; التحقق من عدم وجود تعارض في اسم السكربت
            for existingKey, existingAction in NoFlxHotkeys {
                if (existingAction = scriptPath && existingKey != fullKey) {
                    MsgBox, 48, خطأ, اسم السكربت %scriptName% مستخدم بالفعل لاختصار آخر.`nيرجى اختيار اسم مختلف.
                    return
                }
            }
            
            ; كتابة السكربت إلى ملف
            FileDelete, %fullScriptPath%
            FileAppend, %action%, %fullScriptPath%, UTF-8
            if (ErrorLevel) {
                MsgBox, 48, خطأ, فشل حفظ السكربت في: %fullScriptPath%
                return
            }
        }
        
        ; التعامل مع استبدال السكربت القديم إذا كان موجودًا
        if (NoFlxHotkeys.HasKey(fullKey)) {
            oldAction := NoFlxHotkeys[fullKey]
            if (RegExMatch(oldAction, "\.ahk$") && oldAction != scriptPath) {
                FileDelete, % A_ScriptDir "\" oldAction
            }
            IniDelete, %iniFile%, NoFlx, %fullKey%
        }
        
        action := scriptPath  ; تحديث الإجراء ليكون المسار
    }
    
    ; التعامل مع الإجراءات البسيطة أو السكربتات
    if (NoFlxHotkeys.HasKey(fullKey)) {
        oldAction := NoFlxHotkeys[fullKey]
        MsgBox, 4, تحذير, المفتاح %key% مع شرط النافذة %winCondition% مستخدم بالفعل:`n%oldAction%`nهل تريد استبداله؟
        IfMsgBox, No
            return
        DeleteNoFlxHotkey(fullKey)
    }
    
    IniWrite, %action%, %iniFile%, NoFlx, %fullKey%
    NoFlxHotkeys[fullKey] := action
    
    if (!HotkeyConditions.HasKey(modifierPrefix . key)) {
        HotkeyConditions[modifierPrefix . key] := {}
    }
    HotkeyConditions[modifierPrefix . key][fullKey] := winCondition
    
    try {
        if (winCondition) {
            Hotkey, IfWinActive, %winCondition%
            Hotkey, % modifierPrefix . key, ExecuteNoFlxHotkeyConditional, On
            Hotkey, IfWinActive
        } else {
            Hotkey, % modifierPrefix . key, ExecuteNoFlxHotkeyConditional, On
        }
    } catch e {
        MsgBox, 48, خطأ, فشل تعريف الاختصار بدون Flx: %fullKey%`nالسبب: %e%
    }
}

ExecuteHotkey:
    global CustomHotkeys, AdvancedScripts, baseHotkey, scriptsDir
    keyPressed := StrReplace(A_ThisHotkey, baseHotkey " & ")
    ctrlState := GetKeyState("Ctrl", "P")
    shiftState := GetKeyState("Shift", "P")
    altState := GetKeyState("Alt", "P")
    winState := GetKeyState("LWin", "P") || GetKeyState("RWin", "P")
    modifierPrefix := (ctrlState ? "^" : "") . (shiftState ? "+" : "") . (altState ? "!" : "") . (winState ? "#" : "")
    baseKey := modifierPrefix . keyPressed
    WinGet, activeExe, ProcessName, A
    currentWinCondition := activeExe ? "ahk_exe " . activeExe : ""
    fullKeyWithCondition := baseKey . (currentWinCondition ? "|" . currentWinCondition : "")
    fullKeyDefault := baseKey
    if (AdvancedScripts.HasKey(fullKeyWithCondition)) {
        scriptPath := AdvancedScripts[fullKeyWithCondition]
        fullPath := A_ScriptDir "\" scriptPath
        if FileExist(fullPath) {
            SetWorkingDir, %scriptsDir%
            Run, %A_AhkPath% "%fullPath%", , UseErrorLevel
            SetWorkingDir, %A_ScriptDir%
            if (A_LastError) {
                MsgBox, 48, خطأ, فشل تشغيل السكربت: %fullPath%`nخطأ: %A_LastError%
            }
        } else {
            MsgBox, 48, خطأ, ملف السكربت غير موجود: %fullPath%
        }
    }
    else if (AdvancedScripts.HasKey(fullKeyDefault)) {
        scriptPath := AdvancedScripts[fullKeyDefault]
        fullPath := A_ScriptDir "\" scriptPath
        if FileExist(fullPath) {
            SetWorkingDir, %scriptsDir%
            Run, %A_AhkPath% "%fullPath%", , UseErrorLevel
            SetWorkingDir, %A_ScriptDir%
            if (A_LastError) {
                MsgBox, 48, خطأ, فشل تشغيل السكربت: %fullPath%`nخطأ: %A_LastError%
            }
        } else {
            MsgBox, 48, خطأ, ملف السكربت غير موجود: %fullPath%
        }
    }
    else if (CustomHotkeys.HasKey(fullKeyWithCondition)) {
        action := CustomHotkeys[fullKeyWithCondition]
        ExecuteSingleAction(action)
    }
    else if (CustomHotkeys.HasKey(fullKeyDefault)) {
        action := CustomHotkeys[fullKeyDefault]
        ExecuteSingleAction(action)
    }
return

ExecuteNoFlxHotkey:
    global NoFlxHotkeys
    keyPressed := A_ThisHotkey
    WinGet, activeExe, ProcessName, A
    currentWinCondition := activeExe ? "ahk_exe " . activeExe : ""
    fullKeyWithCondition := keyPressed . (currentWinCondition ? "|" . currentWinCondition : "")
    fullKeyDefault := keyPressed
    if (NoFlxHotkeys.HasKey(fullKeyWithCondition)) {
        action := NoFlxHotkeys[fullKeyWithCondition]
        ExecuteSingleAction(action)
    }
    else if (NoFlxHotkeys.HasKey(fullKeyDefault)) {
        action := NoFlxHotkeys[fullKeyDefault]
        ExecuteSingleAction(action)
    }
return

ExecuteSingleAction(action) {
    action := Trim(action)
    if (InStr(action, "Run ") = 1) {
        command := Trim(SubStr(action, 5))
        SplitPath, command, fileName, dir
        if (fileName = "") {  ; إذا كان مجلدًا
            Run, explorer.exe "%command%", , UseErrorLevel
            if (A_LastError) {
                MsgBox, 48, خطأ, فشل فتح المجلد: %command%`nخطأ: %A_LastError%
            }
            return
        }

        ; الحصول على المسار الكامل للتطبيق
        fullPath := command

        ; التحقق من النافذة المركزة فقط
        WinGet, activeFullPath, ProcessPath, A  ; المسار الكامل للنافذة النشطة
        WinGet, activeID, ID, A
        if (activeFullPath = fullPath) {  ; إذا كانت النافذة المركزة هي التطبيق المطلوب
            WinMinimize, ahk_id %activeID%
            return
        }

        ; البحث عن النافذة إذا لم تكن مركزة
        WinGet, processList, List
        found := false
        targetID := ""
        Loop, %processList% {
            thisID := processList%A_Index%
            WinGet, thisPath, ProcessPath, ahk_id %thisID%
            if (thisPath = fullPath) {  ; إذا تطابق المسار الكامل
                found := true
                targetID := thisID
                break  ; نوقف البحث بمجرد العثور على النافذة
            }
        }

        if (found) {  ; إذا وجدنا النافذة ولكنها ليست مركزة
            WinGet, thisState, MinMax, ahk_id %targetID%
            if (thisState = -1) {  ; إذا كانت مصغرة
                WinRestore, ahk_id %targetID%
            }
            WinActivate, ahk_id %targetID%  ; نركز على النافذة
        } else {  ; إذا لم يتم العثور على النافذة، نشغل التطبيق
            Run, %command%, , UseErrorLevel
            if (A_LastError) {
                MsgBox, 48, خطأ, فشل تشغيل: %command%`nخطأ: %A_LastError%
            }
        }
    } else if (InStr(action, "Send ") = 1) {
        command := Trim(SubStr(action, 6))
        Send, %command%
    } else if (InStr(action, "WinMinimize") = 1) {
        WinMinimize, A
    } else if (InStr(action, "WinMaximize") = 1) {
        WinMaximize, A
    } else if (InStr(action, "WinClose") = 1) {
        WinClose, A
    } else {
        try {
            Run, %A_AhkPath% /c "%action%", , UseErrorLevel
            if (A_LastError) {
                MsgBox, 48, خطأ, فشل تنفيذ الأمر: %action%`nخطأ: %A_LastError%
            }
        } catch e {
            MsgBox, 48, خطأ, الأمر غير مدعوم أو غير صالح: %action%`nالسبب: %e%
        }
    }
}

;------------------ Additional Hotkeys and Functions ------------------

ToggleSecureMode() {
    global isSecureMode, checkInterval, processNames, iniFile
    isSecureMode := !isSecureMode
    IniWrite, %isSecureMode%, %iniFile%, Settings, IsSecureMode
    if (isSecureMode) {
        WinGet, activeWindow, ID, A
        Gui, SecureModeIndicator:Show, NoActivate
        processList := StrSplit(processNames, ",")
        for index, proc in processList {
            Process, Exist, %proc%
            if (ErrorLevel) {
                Process, Close, %proc%
            }
        }
        SetTimer, CheckSecureMode, %checkInterval%
        WinActivate, ahk_id %activeWindow%
    } else {
        Gui, SecureModeIndicator:Hide
        SetTimer, CheckSecureMode, Off
    }
}

CheckSecureMode:
    global isSecureMode, processNames
    if (isSecureMode) {
        processList := StrSplit(processNames, ",")
        for index, proc in processList {
            Process, Exist, %proc%
            if (ErrorLevel) {
                Process, Close, %proc%
            }
        }
        CloseMonitoredFolders()
    }
return

CloseMonitoredFolders() {
    global monitoredFolders, monitoredFoldersWithSub, excludedFolders
    shell := ComObjCreate("Shell.Application")
    folderList := StrSplit(monitoredFolders, ",")
    folderListWithSub := StrSplit(monitoredFoldersWithSub, ",")
    excludedList := StrSplit(excludedFolders, ",")

    for window in shell.Windows {
        try {
            windowFolder := window.document.Folder.Self.Path
        } catch {
            continue
        }
        currentFolder := Trim(windowFolder, " `t`r`n\\")
        StringLower, currentFolder, currentFolder

        ; التحقق من المجلدات المستثناة
        for index, excluded in excludedList {
            excluded := Trim(excluded, " `t`r`n\\")
            StringLower, excluded, excluded
            if (InStr(currentFolder, excluded) = 1) {
                continue 2 ; تخطي هذه النافذة إذا كانت في مجلد مستثنى
            }
        }

        ; التحقق من المجلدات المراقبة بدون تفرعات
        for index, folder in folderList {
            targetFolder := Trim(folder, " `t`r`n\\")
            StringLower, targetFolder, targetFolder
            if (currentFolder = targetFolder) {
                window.Quit()
                Sleep, 100
                break
            }
        }

        ; التحقق من المجلدات المراقبة مع تفرعاتها
        for index, folder in folderListWithSub {
            targetFolder := Trim(folder, " `t`r`n\\")
            StringLower, targetFolder, targetFolder
            if (InStr(currentFolder, targetFolder) = 1) {
                window.Quit()
                Sleep, 100
                break
            }
        }
    }
}

OpenSettings() {
    global monitoredFolders, monitoredFoldersWithSub, processNames, checkInterval
    Gui, GuiSettings:Destroy
    Gui, GuiSettings:Color, 2D2D2D
    Gui, GuiSettings:Font, cFFFFFF s10, Segoe UI
    Gui, GuiSettings:Add, Text, x10 y10 w530 h30 Center cFFD700, إعدادات السكربت
    Gui, GuiSettings:Add, Text, x10 y50 w200 h25, المجلدات المراقبة (بدون تفرعات):
    Gui, GuiSettings:Add, Edit, x220 y50 w300 h25 vMonFolders c000000 Background424242, %monitoredFolders%
    Gui, GuiSettings:Add, Button, x530 y50 w80 h25 gBrowseFolders, تصفح
    Gui, GuiSettings:Add, Text, x10 y85 w200 h25, المجلدات المراقبة (مع تفرعات):
    Gui, GuiSettings:Add, Edit, x220 y85 w300 h25 vMonFoldersWithSub c000000 Background424242, %monitoredFoldersWithSub%
    Gui, GuiSettings:Add, Button, x530 y85 w80 h25 gBrowseFoldersWithSub, تصفح
    Gui, GuiSettings:Add, Text, x10 y155 w200 h25, العمليات المراقبة (افصل بفواصل):
    Gui, GuiSettings:Add, Edit, x220 y155 w300 h25 vProcNames c000000 Background424242, %processNames%
    Gui, GuiSettings:Add, Button, x530 y155 w80 h25'gBrowseProcesses, تصفح
    Gui, GuiSettings:Add, Text, x10 y120 w200 h25, المجلدات المستثناة (مع تفرعات):
    Gui, GuiSettings:Add, Edit, x220 y120 w300 h25 vExclFolders c000000 Background424242, %excludedFolders%
    Gui, GuiSettings:Add, Button, x530 y120 w80 h25 gBrowseExcludedFolders, تصفح
    Gui, GuiSettings:Add, Text, x10 y190 w200 h25, فترة الفحص (بالملي ثانية):
    Gui, GuiSettings:Add, Edit, x220 y190 w300 h25 vChkInterval c000000 Background424242, %checkInterval%
    Gui, GuiSettings:Add, Button, x260 y235 w100 h30 gSaveSettings, حفظ
    Gui, GuiSettings:Add, Button, x370 y235 w100 h30 gCancelSettings, إلغاء
    Gui, GuiSettings:Font, cA0A0A0 s8
    Gui, GuiSettings:Add, Text, x10 y275 w620 h20 Center, استخدم الفواصل لفصل المجلدات والعمليات، أو زر التصفح للإضافة
    Gui, GuiSettings:Show, w630 h300, إعدادات السكربت
    
}

; واجهة مؤشر وضع التسريع
InitSecureModeIndicator() {
    global isSecureMode, checkInterval
    Gui, SecureModeIndicator:New, +LastFound +AlwaysOnTop +ToolWindow -Caption +E0x20
    Gui, SecureModeIndicator:Color, 000000
    WinSet, TransColor, 000000
    Gui, SecureModeIndicator:Font, s12 cFFFFFF, Arial
    Gui, SecureModeIndicator:Add, Text, BackgroundTrans, وضع التسريع
    WinSet, Transparent, 150
    ; تحديد الإحداثيات دائمًا
    if (isSecureMode) {
        Gui, SecureModeIndicator:Show, x0 y0 w100 h30 NoActivate
        SetTimer, CheckSecureMode, %checkInterval%
    } else {
        ; تحديد الإحداثيات قبل الإخفاء لضمان الموقع الصحيح عند الإظهار لاحقًا
        Gui, SecureModeIndicator:Show, x0 y0 w100 h30 NoActivate
        Gui, SecureModeIndicator:Hide
        SetTimer, CheckSecureMode, Off
    }
}


BrowseFolders:
    Gui, GuiSettings:Submit, NoHide
    FileSelectFolder, selectedFolder, , 3, اختر مجلدًا للمراقبة
    if (selectedFolder != "") {
        if (MonFolders = "")
            GuiControl, GuiSettings:, MonFolders, %selectedFolder%
        else
            GuiControl, GuiSettings:, MonFolders, %MonFolders%,%selectedFolder%
    }
return

BrowseFoldersWithSub:
    Gui, GuiSettings:Submit, NoHide
    FileSelectFolder, selectedFolder, , 3, اختر مجلدًا للمراقبة مع تفرعاته
    if (selectedFolder != "") {
        if (MonFoldersWithSub = "")
            GuiControl, GuiSettings:, MonFoldersWithSub, %selectedFolder%
        else
            GuiControl, GuiSettings:, MonFoldersWithSub, %MonFoldersWithSub%,%selectedFolder%
    }
return

BrowseExcludedFolders:
    Gui, GuiSettings:Submit, NoHide
    FileSelectFolder, selectedFolder, , 3, اختر مجلدًا لاستثنائه
    if (selectedFolder != "") {
        if (ExclFolders = "")
            GuiControl, GuiSettings:, ExclFolders, %selectedFolder%
        else
            GuiControl, GuiSettings:, ExclFolders, %ExclFolders%,%selectedFolder%
    }
return

BrowseProcesses:
    Gui, GuiSettings:Submit, NoHide
    FileSelectFile, selectedFile, 3, , اختر عملية للمراقبة, Executable Files (*.exe)
    if (selectedFile != "") {
        SplitPath, selectedFile, fileName
        if (ProcNames = "")
            GuiControl, GuiSettings:, ProcNames, %fileName%
        else
            GuiControl, GuiSettings:, ProcNames, %ProcNames%,%fileName%
    }
return

SaveSettings:
    global monitoredFolders, monitoredFoldersWithSub, excludedFolders, processNames, checkInterval, iniFile
    Gui, GuiSettings:Submit, NoHide
    monitoredFolders := MonFolders
    monitoredFoldersWithSub := MonFoldersWithSub
    excludedFolders := ExclFolders
    processNames := ProcNames
    if (ChkInterval != "" && RegExMatch(ChkInterval, "^\d+$"))
        checkInterval := ChkInterval
    else {
        MsgBox, 48, تحذير, يجب أن تكون فترة الفحص عددًا صحيحًا.
    }
    IniWrite, %monitoredFolders%, %iniFile%, Settings, MonitoredFolders
    IniWrite, %monitoredFoldersWithSub%, %iniFile%, Settings, MonitoredFoldersWithSub
    IniWrite, %excludedFolders%, %iniFile%, Settings, ExcludedFolders
    IniWrite, %processNames%, %iniFile%, Settings, ProcessNames
    IniWrite, %checkInterval%, %iniFile%, Settings, CheckInterval
    Gui, GuiSettings:Destroy
return

CancelSettings:
    Gui, GuiSettings:Destroy
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\BrightnessDown.ahk ===

brightness := GetBrightness()
newBrightness := brightness - 10
if (newBrightness < 0)
    newBrightness := 0
SetBrightness(newBrightness)
Tooltip, تم خفض السطوع إلى %newBrightness%`
SetTimer, RemoveTooltip, -1000
return

RemoveTooltip:
    Tooltip
return

GetBrightness() {
    objWMIService := ComObjGet("winmgmts:\\.\root\WMI")
    colItems := objWMIService.ExecQuery("Select * from WmiMonitorBrightness")
    for item in colItems
        return item.CurrentBrightness
    return 0
}

SetBrightness(val) {
    objWMIService := ComObjGet("winmgmts:\\.\root\WMI")
    colItems := objWMIService.ExecQuery("Select * from WmiMonitorBrightnessMethods")
    for item in colItems
        item.WmiSetBrightness(1, val)
}

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\BrightnessUp.ahk ===

brightness := GetBrightness()
newBrightness := brightness + 10
if (newBrightness > 100)
    newBrightness := 100
SetBrightness(newBrightness)
Tooltip, تم رفع السطوع إلى %newBrightness%`
SetTimer, RemoveTooltip, -1000
return

RemoveTooltip:
    Tooltip
return

GetBrightness() {
    objWMIService := ComObjGet("winmgmts:\\.\root\WMI")
    colItems := objWMIService.ExecQuery("Select * from WmiMonitorBrightness")
    for item in colItems
        return item.CurrentBrightness
    return 0
}

SetBrightness(val) {
    objWMIService := ComObjGet("winmgmts:\\.\root\WMI")
    colItems := objWMIService.ExecQuery("Select * from WmiMonitorBrightnessMethods")
    for item in colItems
        item.WmiSetBrightness(1, val)
}

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\CopyMove.ahk ===

#SingleInstance Force

; Load settings from INI file
Loop, 12  ; Increased to 12 to include *, /, +
{
    IniRead, Action%A_Index%, %A_ScriptDir%\FileOperations.ini, Settings, Action%A_Index%, Copy
    IniRead, Path%A_Index%, %A_ScriptDir%\FileOperations.ini, Settings, Path%A_Index%, F:\Anime
}

; Define valid keys including new symbols
ValidKeys := "0123456789*/+"
Input, Key, L1 T3, %ValidKeys%
if (ErrorLevel = "Timeout")
    ExitApp

; Exit if key pressed is not in our valid set
if (!InStr(ValidKeys, Key))
    ExitApp

if (Key = "0")
{
    ; Settings GUI with single column, Browse next to Action dropdown
    Gui, Settings:New, +AlwaysOnTop, Button Settings
    Gui, Add, Text, x160 y8, Configure action and path for each button
    
    ; Define button labels including new symbols
    ButtonLabels := ["NumPad1", "NumPad2", "NumPad3", "NumPad4", "NumPad5", "NumPad6", "NumPad7", "NumPad8", "NumPad9", "Multiply(*)", "Divide(/)", "Add(+)"]
    
    Loop, 12  ; Increased to 12 to include *, /, +
    {
        yPos := 30 + (A_Index - 1) * 40
        Gui, Add, Text, x10 y%yPos% w80, % ButtonLabels[A_Index] ":"
        Gui, Add, DropDownList, x90 y%yPos% vAction%A_Index% w100, Copy|Move|Create Shortcut
        GuiControl, ChooseString, Action%A_Index%, % Action%A_Index%
        Gui, Add, Button, x200 y%yPos% gBrowse%A_Index%, Browse
        Gui, Add, Edit, x280 y%yPos% vPath%A_Index% w250, % Path%A_Index%
    }
    
    ; Save and Cancel buttons at the bottom
    Gui, Add, Button, x200 y505 w80 gSaveSettings Default, Save  ; Adjusted Y position
    Gui, Add, Button, x300 y505 w80 gCancelSettings, Cancel     ; Adjusted Y position
    Gui, Show, w550 h540  ; Increased height to accommodate new rows
    return
}

; Map special keys to numbers 10-12
if (Key = "*")
    Num := 10
else if (Key = "/")
    Num := 11
else if (Key = "+")
    Num := 12
else if (Key >= "1" && Key <= "9")
    Num := Key
else
    ExitApp

; Only process if we have a valid number (1-12)
if (Num >= 1 && Num <= 12)
{
    ChosenOperation := Action%Num%
    TargetPath := Path%Num%
    
    ; Copy selected items to clipboard
    Clipboard := ""
    Send {Ctrl down}
    Sleep 100
    Send {c down}
    Sleep 100
    Send {c up}
    Send {Ctrl up}
    ClipWait, 2
    if (ErrorLevel)
        ExitApp

    ; Global variables
    global ApplyToAll := 0
    global ChosenAction := ""
    global CancelCopy := 0
    global TotalBytes := 0
    global ProcessedBytes := 0

    ItemsToCopy := StrSplit(Clipboard, "`n", "`r")

    ; Calculate total size for progress bar
    Loop, % ItemsToCopy.Length()
    {
        Item := Trim(ItemsToCopy[A_Index])
        IfExist, %Item%
        {
            SplitPath, Item,,, ItemExt
            if (ItemExt != "") {
                FileGetSize, FileSize, %Item%
                TotalBytes += FileSize
            }
            else {
                Loop, Files, %Item%\*.*, R
                {
                    FileGetSize, FileSize, %A_LoopFileFullPath%
                    TotalBytes += FileSize
                }
            }
        }
    }

    Progress, B W100 H10 X0 Y0 Range0-%TotalBytes%
    Progress, 0

    ; Process items
    Loop, % ItemsToCopy.Length()
    {
        ItemToCopy := Trim(ItemsToCopy[A_Index])
        
        IfExist, %ItemToCopy%
        {
            SplitPath, ItemToCopy, ItemName,, ItemExt
            
            ; Handle both files and folders
            TargetItem := TargetPath . "\" . ItemName
            IfNotExist, %TargetPath%
                FileCreateDir, %TargetPath%
                
            IfExist, %TargetItem%
            {
                if (ApplyToAll && ChosenAction != "") {
                    if (ChosenAction = "Replace")
                        Gosub, ReplaceAction
                    else if (ChosenAction = "Rename")
                        Gosub, RenameAction
                    else if (ChosenAction = "Cancel")
                        Gosub, SkipAction
                }
                else {
                    ShowDuplicateDialog(ItemName, (ItemExt != "" ? "File" : "Folder"))
                }
            }
            else
                ProcessItem(ItemToCopy, TargetItem)
        }
        if (CancelCopy)
            break
    }

    Progress, Off
    ExitApp
}

; Browse buttons for settings (expanded to 12)
Browse1:
Browse2:
Browse3:
Browse4:
Browse5:
Browse6:
Browse7:
Browse8:
Browse9:
Browse10:
Browse11:
Browse12:
Num := SubStr(A_ThisLabel, 7)
Gui, Settings:Submit, NoHide
FileSelectFolder, SelectedFolder, , 3
if (SelectedFolder != "")
    GuiControl,, Path%Num%, %SelectedFolder%
return

SaveSettings:
Gui, Settings:Submit
Loop, 12  ; Increased to 12
{
    IniWrite, % Action%A_Index%, %A_ScriptDir%\FileOperations.ini, Settings, Action%A_Index%
    IniWrite, % Path%A_Index%, %A_ScriptDir%\FileOperations.ini, Settings, Path%A_Index%
}
Gui, Settings:Destroy
ExitApp

CancelSettings:
Gui, Settings:Destroy
ExitApp

SkipAction:
if (ItemExt != "") {
    FileGetSize, FileSize, %ItemToCopy%
    ProcessedBytes += FileSize
} else {
    Loop, Files, %ItemToCopy%\*.*, R
        FileGetSize, FileSize, %A_LoopFileFullPath%
        ProcessedBytes += FileSize
}
Progress, %ProcessedBytes%
Sleep, 10
return

CancelAction:
Gui, Duplicate:Submit
if (ApplyToAll)
    ChosenAction := "Cancel"
Gui, Duplicate:Destroy
return

CancelAllAction:
global CancelCopy := 1
Gui, Duplicate:Destroy
return

ReplaceAction:
Gui, Duplicate:Submit
if (ApplyToAll)
    ChosenAction := "Replace"
Gui, Duplicate:Destroy
if (ItemExt != "") {
    FileDelete, %TargetItem%
    ProcessItem(ItemToCopy, TargetItem)
} else {
    FileRemoveDir, %TargetItem%, 1
    if (!ErrorLevel)
        ProcessItem(ItemToCopy, TargetItem)
}
return

RenameAction:
Gui, Duplicate:Submit
if (ApplyToAll)
    ChosenAction := "Rename"
Gui, Duplicate:Destroy
Loop
{
    NewName := ItemName . " (" . A_Index . ")"
    if (ItemExt != "")
        NewTarget := TargetPath . "\" . NewName . "." . ItemExt
    else
        NewTarget := TargetPath . "\" . NewName
    
    IfNotExist, %NewTarget%
        break
}
ProcessItem(ItemToCopy, NewTarget)
return

ProcessItem(Source, Dest) {
    global ChosenOperation, ProcessedBytes, ItemExt
    if (ChosenOperation = "Copy") {
        if (ItemExt != "")
            CopyFileWithProgress(Source, Dest)
        else
            CopyFolderWithProgress(Source, Dest)
    }
    else if (ChosenOperation = "Move") {
        if (ItemExt != "") {
            FileMove, %Source%, %Dest%, 1
            FileGetSize, FileSize, %Source%
            ProcessedBytes += FileSize
        }
        else {
            FileMoveDir, %Source%, %Dest%, 1
            Loop, Files, %Dest%\*.*, R
                FileGetSize, FileSize, %A_LoopFileFullPath%
                ProcessedBytes += FileSize
        }
        Progress, %ProcessedBytes%
        Sleep, 10
    }
    else if (ChosenOperation = "Create Shortcut") {
        if (ItemExt != "")
            FileCreateShortcut, %Source%, %Dest%.lnk
        else
            FileCreateShortcut, %Source%, %Dest%.lnk
        ProcessedBytes += 100
        Progress, %ProcessedBytes%
        Sleep, 10
    }
}

CopyFileWithProgress(Source, Dest) {
    global CancelCopy, ProcessedBytes
    FileGetSize, FileSize, %Source%
    FileCopy, %Source%, %Dest%, 1
    if (CancelCopy) {
        FileDelete, %Dest%
    } else {
        ProcessedBytes += FileSize
        Progress, %ProcessedBytes%
        Sleep, 10
    }
}

CopyFolderWithProgress(Source, Dest) {
    global CancelCopy, ProcessedBytes
    FileCreateDir, %Dest%
    Loop, Files, %Source%\*.*, R
    {
        if (CancelCopy) {
            FileRemoveDir, %Dest%, 1
            return
        }
        RelPath := SubStr(A_LoopFileFullPath, StrLen(Source) + 2)
        TargetPath := Dest . "\" . RelPath
        SplitPath, TargetPath,, TargetDir
        IfNotExist, %TargetDir%
            FileCreateDir, %TargetDir%
        FileGetSize, FileSize, %A_LoopFileFullPath%
        FileCopy, %A_LoopFileFullPath%, %TargetPath%, 1
        ProcessedBytes += FileSize
        Progress, %ProcessedBytes%
        Sleep, 10
    }
}

ShowDuplicateDialog(ItemName, ItemType) {
    Gui, Duplicate:New, +AlwaysOnTop, %ItemType% Exists
    Gui, Add, Text,, The %ItemType% %ItemName% already exists
    Gui, Add, Button, x10 y50 w70 h30 gReplaceAction, Replace
    Gui, Add, Button, x85 y50 w70 h30 gRenameAction, Rename
    Gui, Add, Button, x160 y50 w70 h30 gCancelAction, Skip
    Gui, Add, Button, x235 y50 w70 h30 gCancelAllAction, Cancel All
    Gui, Add, Checkbox, x10 y90 w290 h20 vApplyToAll, Apply this choice to all duplicate items
    Gui, Show, w320 h120
    WinWaitClose, %ItemType% Exists
}

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\CopyMove0.ahk ===

﻿#SingleInstance Force

Clipboard := ""
Send {Ctrl down}
Sleep 100
Send {c down}
Sleep 100
Send {c up}
Send {Ctrl up}
ClipWait, 2
if (ErrorLevel) {
    return
}

; Global variables
global ApplyToAll := 0
global ChosenAction := ""
global ChosenOperation := ""
global CancelCopy := 0
global TotalBytes := 0
global ProcessedBytes := 0

; Split clipboard content into multiple items
ItemsToCopy := StrSplit(Clipboard, "`n", "`r")

; Calculate total size of files
Loop, % ItemsToCopy.Length()
{
    Item := Trim(ItemsToCopy[A_Index])
    IfExist, %Item%
    {
        SplitPath, Item,,, ItemExt
        if (ItemExt != "") {  ; File
            FileGetSize, FileSize, %Item%
            TotalBytes += FileSize
        }
        else {  ; Folder
            Loop, Files, %Item%\*.*, R
            {
                FileGetSize, FileSize, %A_LoopFileFullPath%
                TotalBytes += FileSize
            }
        }
    }
}

; Show initial operation selection dialog
Gui, Operation:New, +AlwaysOnTop, اختر العملية
Gui, Add, Text,, اختر العملية المطلوبة:
Gui, Add, Button, x10 y50 w80 h30 gCopyOperation, نسخ
Gui, Add, Button, x100 y50 w80 h30 gMoveOperation, نقل
Gui, Add, Button, x190 y50 w80 h30 gShortcutOperation, إنشاء اختصار
Gui, Show, w300 h100
WinWaitClose, اختر العملية

if (ChosenOperation = "")
    ExitApp

; Progress bar
Progress, B W100 H10 X0 Y0 Range0-%TotalBytes%
Progress, 0

; Process each item
Loop, % ItemsToCopy.Length()
{
    ItemToCopy := Trim(ItemsToCopy[A_Index])
    
    IfExist, %ItemToCopy%
    {
        SplitPath, ItemToCopy, ItemName,, ItemExt
        
        if (ItemExt != "") {  ; File
            TargetFile := "F:\Anime\" . ItemName
            IfNotExist, F:\Anime\
                FileCreateDir, F:\Anime\
            
            IfExist, %TargetFile%
            {
                if (ApplyToAll && ChosenAction != "") {
                    if (ChosenAction = "Replace")
                        Gosub, ReplaceAction
                    else if (ChosenAction = "Rename")
                        Gosub, RenameAction
                    else if (ChosenAction = "Cancel")
                        Gosub, SkipAction
                }
                else {
                    ShowDuplicateDialog(ItemName, "ملف")
                }
            }
            else
                ProcessItem(ItemToCopy, TargetFile)
        }
        else {  ; Folder
            TargetFolder := "F:\Anime\" . ItemName
            IfNotExist, F:\Anime\
                FileCreateDir, F:\Anime\
            
            IfExist, %TargetFolder%
            {
                if (ApplyToAll && ChosenAction != "") {
                    if (ChosenAction = "Replace")
                        Gosub, ReplaceAction
                    else if (ChosenAction = "Rename")
                        Gosub, RenameAction
                    else if (ChosenAction = "Cancel")
                        Gosub, SkipAction
                }
                else {
                    ShowDuplicateDialog(ItemName, "مجلد")
                }
            }
            else
                ProcessItem(ItemToCopy, TargetFolder)
        }
    }
    if (CancelCopy)
        break
}

DllCall("shell32\SHChangeNotify", "UInt", 0x08000000, "UInt", 0, "Ptr", 0, "Ptr", 0)
Progress, Off
ExitApp

CopyOperation:
ChosenOperation := "Copy"
Gui, Operation:Destroy
return

MoveOperation:
ChosenOperation := "Move"
Gui, Operation:Destroy
return

ShortcutOperation:
ChosenOperation := "Shortcut"
Gui, Operation:Destroy
return

SkipAction:
if (ItemExt != "") {
    FileGetSize, FileSize, %ItemToCopy%
    ProcessedBytes += FileSize
} else {
    Loop, Files, %ItemToCopy%\*.*, R
        FileGetSize, FileSize, %A_LoopFileFullPath%
        ProcessedBytes += FileSize
}
Progress, %ProcessedBytes%
Sleep, 10
return

CancelAction:
Gui, Duplicate:Submit
if (ApplyToAll)
    ChosenAction := "Cancel"
Gui, Duplicate:Destroy
return

CancelAllAction:
global CancelCopy := 1
Gui, Duplicate:Destroy
return

ReplaceAction:
Gui, Duplicate:Submit
if (ApplyToAll)
    ChosenAction := "Replace"
Gui, Duplicate:Destroy
if (ItemExt != "") {
    FileDelete, %TargetFile%
    ProcessItem(ItemToCopy, TargetFile)
} else {
    FileRemoveDir, %TargetFolder%, 1
    if (!ErrorLevel)
        ProcessItem(ItemToCopy, TargetFolder)
}
return

RenameAction:
Gui, Duplicate:Submit
if (ApplyToAll)
    ChosenAction := "Rename"
Gui, Duplicate:Destroy
Loop
{
    NewName := ItemName . " (" . A_Index . ")"
    if (ItemExt != "")
        NewTarget := "F:\Anime\" . NewName . "." . ItemExt
    else
        NewTarget := "F:\Anime\" . NewName
    
    IfNotExist, %NewTarget%
        break
}
ProcessItem(ItemToCopy, NewTarget)
return

ProcessItem(Source, Dest) {
    global ChosenOperation, ProcessedBytes
    if (ChosenOperation = "Copy") {
        if (ItemExt != "")
            CopyFileWithProgress(Source, Dest)
        else
            CopyFolderWithProgress(Source, Dest)
    }
    else if (ChosenOperation = "Move") {
        if (ItemExt != "")
            FileMove, %Source%, %Dest%, 1
        else
            FileMoveDir, %Source%, %Dest%, 1
        FileGetSize, FileSize, %Source%
        ProcessedBytes += FileSize
        Progress, %ProcessedBytes%
        Sleep, 10
    }
    else if (ChosenOperation = "Shortcut") {
        if (ItemExt != "")
            FileCreateShortcut, %Source%, %Dest%.lnk
        else
            FileCreateShortcut, %Source%, %Dest%.lnk
        ProcessedBytes += 100  ; Arbitrary size for shortcuts
        Progress, %ProcessedBytes%
        Sleep, 10
    }
}

CopyFileWithProgress(Source, Dest) {
    global CancelCopy, ProcessedBytes
    FileGetSize, FileSize, %Source%
    FileCopy, %Source%, %Dest%, 1
    if (CancelCopy) {
        FileDelete, %Dest%
    } else {
        ProcessedBytes += FileSize
        Progress, %ProcessedBytes%
        Sleep, 10
    }
}

CopyFolderWithProgress(Source, Dest) {
    global CancelCopy, ProcessedBytes
    FileCreateDir, %Dest%
    Loop, Files, %Source%\*.*, R
    {
        if (CancelCopy) {
            FileRemoveDir, %Dest%, 1
            return
        }
        RelPath := SubStr(A_LoopFileFullPath, StrLen(Source) + 2)
        TargetPath := Dest . "\" . RelPath
        SplitPath, TargetPath,, TargetDir
        IfNotExist, %TargetDir%
            FileCreateDir, %TargetDir%
        FileGetSize, FileSize, %A_LoopFileFullPath%
        FileCopy, %A_LoopFileFullPath%, %TargetPath%, 1
        ProcessedBytes += FileSize
        Progress, %ProcessedBytes%
        Sleep, 10
    }
}

ShowDuplicateDialog(ItemName, ItemType) {
    Gui, Duplicate:New, +AlwaysOnTop, %ItemType% موجود
    Gui, Add, Text,, ال%ItemType% %ItemName% موجود بالفعل في F:\Anime
    Gui, Add, Button, x10 y50 w70 h30 gReplaceAction, استبدال
    Gui, Add, Button, x85 y50 w70 h30 gRenameAction, إعادة تسمية
    Gui, Add, Button, x160 y50 w70 h30 gCancelAction, تخطي
    Gui, Add, Button, x235 y50 w70 h30 gCancelAllAction, إلغاء الكل
    Gui, Add, Checkbox, x10 y90 w290 h20 vApplyToAll, تطبيق هذا الخيار على جميع العناصر المتكررة
    Gui, Show, w320 h120
    WinWaitClose, %ItemType% موجود
}

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\DeleteLine.ahk ===

﻿Send, ^+{Left}{Del}
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\KillProses.ahk ===

﻿WinGet, ActivePID, PID, A
Process, Close, %ActivePID%
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\langChanger.ahk ===

﻿ClipSaved := ClipboardAll
Clipboard := ""
Send, ^c
Sleep, 100
SelectedText := Clipboard
if (SelectedText = "")
{
    Clipboard := ClipSaved
    return
}
ArToEn := { "ذ": "``", "ض": "q", "ص": "w", "ث": "e", "ق": "r", "ف": "t", "غ": "y", "ع": "u", "ه": "i", "خ": "o"
, "ح": "p", "ج": "[", "د": "]", "ش": "a", "س": "s", "ي": "d", "ب": "f", "ل": "g", "ا": "h", "ت": "j"
, "ن": "k", "م": "l", "ك": ";", "ط": "'", "ئ": "z", "ء": "x", "ؤ": "c", "ر": "v", "لا": "b"
, "ى": "n", "ة": "m", "و": ",", "ز": ".", "ظ": "/" }
EnToAr := { "``": "ذ", "q": "ض", "w": "ص", "e": "ث", "r": "ق", "t": "ف", "y": "غ", "u": "ع", "i": "ه", "o": "خ"
, "p": "ح", "[": "ج", "]": "د", "a": "ش", "s": "س", "d": "ي", "f": "ب", "g": "ل", "h": "ا", "j": "ت"
, "k": "ن", "l": "م", ";": "ك", "'": "ط", "z": "ئ", "x": "ء", "c": "ؤ", "v": "ر", "b": "لا"
, "n": "ى", "m": "ة", ",": "و", ".": "ز", "/": "ظ" }
ArabicCount := 0
EnglishCount := 0
Loop, Parse, SelectedText
{
    if RegExMatch(A_LoopField, "[اأإبتثجحخدذرزسشصضطظعغفقكلمنهويةىئؤلا]")
        ArabicCount++
    else if RegExMatch(A_LoopField, "[a-zA-Z]")
        EnglishCount++
}
IsArabic := (ArabicCount > EnglishCount)
NewText := ""
Loop, Parse, SelectedText
{
    Char := A_LoopField
    if (IsArabic)
    {
        NewChar := ArToEn[Char] ? ArToEn[Char] : Char
    }
    else
    {
        NewChar := EnToAr[Char] ? EnToAr[Char] : Char
    }
    NewText .= NewChar
}
Clipboard := NewText
Send, ^v
Sleep, 100
Clipboard := ClipSaved
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\Minimize.ahk ===

﻿WinMinimize, A
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\PlayPause.ahk ===

﻿Send, {Media_Play_Pause}
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\PowerOFF.ahk ===

﻿Sleep, 20
WinGet, id, list
Loop, %id%
{
    this_id := id%A_Index%
    WinGetClass, class, ahk_id %this_id%
    If (class = "WorkerW" or class = "Progman" or class = "Shell_TrayWnd")
        continue
    WinClose, ahk_id %this_id%
    Sleep, 50
}

MsgBox, 4, تأكيد الإيقاف, هل أنت متأكد أنك تريد إيقاف التشغيل، سيدي كوروس؟
IfMsgBox, No
    return
Shutdown, 5
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\qr.ahk ===

﻿#NoEnv
#SingleInstance Force
    pythonPath := "pythonw"  ; أو المسار الكامل: "C:\Path\To\pythonw.exe"
    scriptPath := "c:\Users\KorosSama\Documents\GitHub\FlxAHK\Scripts\qr_display.py"
    command := pythonPath . " -u """ . scriptPath . """"
    Run, %command%  ; بدون Hide، لأن pythonw ما بيفتح console أصلاً
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\RunPath.ahk ===

﻿#SingleInstance Force  ; للتأكد من أن نسخة واحدة فقط تعمل

If (InStr(Clipboard, "\") && FileExist(Clipboard)) ; التحقق من المسار
    Run, %Clipboard%
Else
{
    ; إعدادات الشريط الأحمر الصغير
    BarHeight := 10  ; ارتفاع الشريط صغير (30 بكسل)
    BarWidth := A_ScreenWidth
    FlashColor := "FF0000"  ; لون أحمر
    StartY := A_ScreenHeight - BarHeight  ; الموقع في أسفل الشاشة
    StartX := (A_ScreenWidth - BarWidth) // 2  ; توسيط الشريط أفقيًا

    ; إنشاء GUI للشريط
    Gui, WarningBar:+LastFound +AlwaysOnTop -Caption +ToolWindow
    Gui, WarningBar:Color, %FlashColor%
    Gui, WarningBar:Show, x%StartX% y%StartY% w%BarWidth% h%BarHeight% NoActivate

    ; تأثير الظهور التدريجي (Fade In)
    Loop, 15  ; خطوات أقل لتسريع التأثير
    {
        Alpha := A_Index * 17  ; زيادة الشفافية بسرعة (من 0 إلى 255 تقريبًا)
        WinSet, Transparent, %Alpha%, ahk_class AutoHotkeyGUI
        Sleep 2  ; سرعة الظهور (75 مللي ثانية كل التأثير)
    }

    Sleep 50  ; مدة بقاء الشريط (نص ثانية)

    ; تأثير الاختفاء التدريجي (Fade Out)
    Loop, 15
    {
        Alpha := 255 - (A_Index * 17)  ; تقليل الشفافية بسرعة
        WinSet, Transparent, %Alpha%, ahk_class AutoHotkeyGUI
        Sleep 2  ; سرعة الاختفاء
    }

    Gui, WarningBar:Destroy  ; إخفاء الشريط
}
ExitApp

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\SetTimer.ahk ===

﻿InputBox, Minutes, تنبيه, بعد كم دقيقة تشتي التنبيه يشتغل يا سيد كوروس؟, , , , , , , 5
if (ErrorLevel = 0 && Minutes > 0)
{
    Sleep, % Minutes * 60000
    MsgBox, يا كوروس، كمل الوقت!
}
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\sleepByRClick.ahk ===

#SingleInstance Force
#Persistent

SetTimer, CheckTime, 2000
return

CheckTime:
ExitApp
return

RButton::
DllCall("PowrProf\SetSuspendState", "int", 0, "int", 0, "int", 0)
Sleep, 1000
ExitApp
return

Left::
DllCall("PowrProf\SetSuspendState", "int", 1, "int", 0, "int", 0)
Sleep, 1000
ExitApp
return


==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\SuperScreenShot.ahk ===

﻿#SingleInstance Force
#Include %A_ScriptDir%\Gdip.ahk  ; المسار النسبي من مجلد السكربت المتقدم (Scripts)
Input, Key, L1 T3  ; انتظار إدخال رقم من NumPad لمدة 3 ثواني
if (ErrorLevel = "Timeout")
    ExitApp

; تحميل المسار الرئيسي من ملف ini إذا كان موجوداً
IniRead, MainFolder, %A_ScriptDir%\..\ScreenshotSettings.ini, Settings, MainFolder, %A_Desktop%
IniRead, Folder1, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder1, Folder1
IniRead, Folder2, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder2, Folder2
IniRead, Folder3, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder3, Folder3
IniRead, Folder4, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder4, Folder4
IniRead, Folder5, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder5, Folder5
IniRead, Folder6, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder6, Folder6
IniRead, Folder7, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder7, Folder7
IniRead, Folder8, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder8, Folder8
IniRead, Folder9, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder9, Folder9

if (Key = "0")
{
    Gui, 1:Destroy
    Gui, 1:+AlwaysOnTop
    Gui, 1:Add, Text,, Main Folder Path:
    Gui, 1:Add, Edit, vMainFolderPath w300, %MainFolder%
    Gui, 1:Add, Button, gBrowseMainFolder, Browse
    Gui, 1:Add, Text,, Folder Names:
    Gui, 1:Add, Text,, NumPad1:
    Gui, 1:Add, Edit, vFolder1 w200, %Folder1%
    Gui, 1:Add, Text,, NumPad2:
    Gui, 1:Add, Edit, vFolder2 w200, %Folder2%
    Gui, 1:Add, Text,, NumPad3:
    Gui, 1:Add, Edit, vFolder3 w200, %Folder3%
    Gui, 1:Add, Text,, NumPad4:
    Gui, 1:Add, Edit, vFolder4 w200, %Folder4%
    Gui, 1:Add, Text,, NumPad5:
    Gui, 1:Add, Edit, vFolder5 w200, %Folder5%
    Gui, 1:Add, Text,, NumPad6:
    Gui, 1:Add, Edit, vFolder6 w200, %Folder6%
    Gui, 1:Add, Text,, NumPad7:
    Gui, 1:Add, Edit, vFolder7 w200, %Folder7%
    Gui, 1:Add, Text,, NumPad8:
    Gui, 1:Add, Edit, vFolder8 w200, %Folder8%
    Gui, 1:Add, Text,, NumPad9:
    Gui, 1:Add, Edit, vFolder9 w200, %Folder9%
    Gui, 1:Add, Button, gSaveSettings Default, Save
    Gui, 1:Add, Button, gCancelSettings, Cancel
    Gui, 1:Show
    return
}

if (Key >= "1" && Key <= "9")
{
    FolderVar := "Folder" . Key
    TargetFolder := %FolderVar%
    FullPath := MainFolder . "\" . TargetFolder
    
    IfNotExist, %FullPath%
        FileCreateDir, %FullPath%
    
    FormatTime, TimeStamp,, yyyy-MM-dd_HH-mm-ss
    FileName := FullPath . "\Screenshot_" . TimeStamp . ".png"
    
    pToken := Gdip_Startup()
    if !pToken
    {
        MsgBox, GDI+ failed to start. Please ensure Gdip.ahk is in %A_ScriptDir%.
        ExitApp
    }
    
    pBitmap := Gdip_BitmapFromScreen("0|0|" . A_ScreenWidth . "|" . A_ScreenHeight)
    if !pBitmap
    {
        MsgBox, Failed to capture screen.
        Gdip_Shutdown(pToken)
        ExitApp
    }
    
    Gdip_SaveBitmapToFile(pBitmap, FileName)
    Gdip_DisposeImage(pBitmap)
    Gdip_Shutdown(pToken)

    ; إعداد تأثير الوميض على الحواف
    BorderWidth := 7  ; عرض الحافة (يمكنك تعديله حسب رغبتك)
    FlashColor := "FFFFFF"  ; لون الوميض (أبيض، يمكنك تغييره مثل "FFFF00" للأصفر)

    ; إنشاء GUI للحافة العلوية
    Gui, BorderTop:+LastFound +AlwaysOnTop -Caption +ToolWindow
    Gui, BorderTop:Color, %FlashColor%
    Gui, BorderTop:Show, x0 y0 w%A_ScreenWidth% h%BorderWidth% NoActivate

    ; إنشاء GUI للحافة السفلية
    Gui, BorderBottom:+LastFound +AlwaysOnTop -Caption +ToolWindow
    Gui, BorderBottom:Color, %FlashColor%
    BottomY := A_ScreenHeight - BorderWidth
    Gui, BorderBottom:Show, x0 y%BottomY% w%A_ScreenWidth% h%BorderWidth% NoActivate

    ; إنشاء GUI للحافة اليسرى
    Gui, BorderLeft:+LastFound +AlwaysOnTop -Caption +ToolWindow
    Gui, BorderLeft:Color, %FlashColor%
    Gui, BorderLeft:Show, x0 y0 w%BorderWidth% h%A_ScreenHeight% NoActivate

    ; إنشاء GUI للحافة اليمنى
    Gui, BorderRight:+LastFound +AlwaysOnTop -Caption +ToolWindow
    Gui, BorderRight:Color, %FlashColor%
    RightX := A_ScreenWidth - BorderWidth
    Gui, BorderRight:Show, x%RightX% y0 w%BorderWidth% h%A_ScreenHeight% NoActivate

    ; الانتظار لفترة قصيرة (مدة الوميض)
    Sleep, 100  ; 100 مللي ثانية (يمكنك تعديل المدة)

    ; إخفاء جميع الحواف
    Gui, BorderTop:Destroy
    Gui, BorderBottom:Destroy
    Gui, BorderLeft:Destroy
    Gui, BorderRight:Destroy
}

Exitapp

BrowseMainFolder:
Gui, 1:Submit, NoHide
FileSelectFolder, SelectedFolder, , 3
if SelectedFolder !=
    GuiControl, 1:, MainFolderPath, %SelectedFolder%
Exitapp

SaveSettings:
Gui, 1:Submit
if (MainFolderPath = "")
    MainFolderPath := A_Desktop
if (Folder1 = "" or Folder1 = "Folder1")
    Folder1 := "Folder1"
if (Folder2 = "" or Folder2 = "Folder2")
    Folder2 := "Folder2"
if (Folder3 = "" or Folder3 = "Folder3")
    Folder3 := "Folder3"
if (Folder4 = "" or Folder4 = "Folder4")
    Folder4 := "Folder4"
if (Folder5 = "" or Folder5 = "Folder5")
    Folder5 := "Folder5"
if (Folder6 = "" or Folder6 = "Folder6")
    Folder6 := "Folder6"
if (Folder7 = "" or Folder7 = "Folder7")
    Folder7 := "Folder7"
if (Folder8 = "" or Folder8 = "Folder8")
    Folder8 := "Folder8"
if (Folder9 = "" or Folder9 = "Folder9")
    Folder9 := "Folder9"

IniRead, OldMainFolder, %A_ScriptDir%\..\ScreenshotSettings.ini, Settings, MainFolder, %A_Desktop%
IniRead, OldFolder1, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder1, Folder1
IniRead, OldFolder2, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder2, Folder2
IniRead, OldFolder3, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder3, Folder3
IniRead, OldFolder4, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder4, Folder4
IniRead, OldFolder5, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder5, Folder5
IniRead, OldFolder6, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder6, Folder6
IniRead, OldFolder7, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder7, Folder7
IniRead, OldFolder8, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder8, Folder8
IniRead, OldFolder9, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder9, Folder9

if (OldMainFolder != MainFolderPath && InStr(FileExist(OldMainFolder), "D"))
{
    FileMoveDir, %OldMainFolder%, %MainFolderPath%, R
    if (ErrorLevel)
        MsgBox, Failed to rename main folder from %OldMainFolder% to %MainFolderPath%. ErrorLevel: %ErrorLevel%
}

OldFolders := [OldFolder1, OldFolder2, OldFolder3, OldFolder4, OldFolder5, OldFolder6, OldFolder7, OldFolder8, OldFolder9]
NewFolders := [Folder1, Folder2, Folder3, Folder4, Folder5, Folder6, Folder7, Folder8, Folder9]

Loop, 9
{
    OldFolder := OldFolders[A_Index]
    NewFolder := NewFolders[A_Index]
    OldPath := OldMainFolder . "\" . OldFolder
    NewPath := MainFolderPath . "\" . NewFolder

    if (OldFolder != NewFolder && InStr(FileExist(OldPath), "D"))
    {
        FileMoveDir, %OldPath%, %NewPath%, R
        if (ErrorLevel)
            MsgBox, Failed to rename folder from %OldPath% to %NewPath%. ErrorLevel: %ErrorLevel%
    }
}

IniWrite, %MainFolderPath%, %A_ScriptDir%\..\ScreenshotSettings.ini, Settings, MainFolder
IniWrite, %Folder1%, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder1
IniWrite, %Folder2%, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder2
IniWrite, %Folder3%, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder3
IniWrite, %Folder4%, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder4
IniWrite, %Folder5%, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder5
IniWrite, %Folder6%, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder6
IniWrite, %Folder7%, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder7
IniWrite, %Folder8%, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder8
IniWrite, %Folder9%, %A_ScriptDir%\..\ScreenshotSettings.ini, Folders, Folder9

Gui, 1:Destroy
Exitapp

CancelSettings:
Gui, 1:Destroy
Exitapp

GuiClose:
Gui, 1:Destroy
Exitapp

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\Transi.ahk ===

﻿WinSet, Transparent, 255, A
WinSet, Transparent, OFF, A
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\TransO.ahk ===

﻿WinGet, TransLevel, Transparent, A
if (TransLevel = "") {
    TransLevel := 255
}
if (TransLevel <= 55) {
    TransLevel := 255
} else {
    TransLevel -= 50
}
WinSet, Transparent, %TransLevel%, A
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\TransP.ahk ===

﻿WinSet, Transparent, 0, A
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\VlcPlayList.ahk ===

#SingleInstance Force
SetWorkingDir %A_ScriptDir%

; مسار VLC
VLCPath := "C:\Program Files (x86)\VideoLAN\VLC/vlc.exe"

; التحقق أولاً من المجلد المحدد عبر الحافظة
FolderPath := GetFolderFromClipboard()
if (FolderPath = "" || !FileExist(FolderPath)) {
    ; إذا لم يكن هناك مجلد محدد أو المسار غير صالح، استخدام طريقة المستكشف
    FolderPath := GetActiveExplorerPath()
    if (FolderPath = "") {
        MsgBox, لم يتم العثور على مجلد مفتوح أو محدد!
        ExitApp
    }
}

; تشغيل VLC مباشرة بدون واجهة
Run, "%VLCPath%" "--playlist-autostart" "--loop" "%FolderPath%"
ExitApp

; دالة لاستخراج المسار من الحافظة
GetFolderFromClipboard() {
    if (WinActive("ahk_class CabinetWClass") || WinActive("ahk_class ExplorerWClass")) {
        ClipboardOld := ClipboardAll  ; حفظ الحافظة الحالية
        Clipboard := ""  ; تفريغ الحافظة
        Send {Ctrl down}
        Sleep 50
        Send {c down}
        Sleep 50
        Send {c up}
        Send {Ctrl up}
        ClipWait, 1  ; الانتظار لمدة ثانية واحدة
        if (!ErrorLevel && FileExist(Clipboard)) {
            FolderPath := Trim(Clipboard, "`n`r")
            Clipboard := ClipboardOld  ; استعادة الحافظة
            return FolderPath
        }
        Clipboard := ClipboardOld  ; استعادة الحافظة إذا فشل
    }
    return ""  ; إرجاع فارغ إذا لم ينجح
}

; دالة لاستخراج المسار من مستكشف الملفات
GetActiveExplorerPath() {
    WinGet, activeWin, ID, A
    for window in ComObjCreate("Shell.Application").Windows {
        if (window.HWND = activeWin) {
            return window.Document.Folder.Self.Path
        }
    }
    return ""
}

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\VolumeDown.ahk ===

﻿SoundSet, -5
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\VolumeUp.ahk ===

﻿SoundSet, +5
return

==================================================


=== C:/Users/KorosSama/Documents/GitHub/FlxAHK\Scripts\Zshort.ahk ===

﻿#SingleInstance Force  ; للتأكد من أن نسخة واحدة فقط تعمل
WinGetClass, ActiveClass, A
if (ActiveClass = "Photoshop")
{
    Send, ^+!]
    ExitApp  ; إنهاء السكربت بعد التنفيذ
}
else
    Input, Key, L1 T3
if (ErrorLevel = "Timeout")
    ExitApp  ; إنهاء إذا انتهى وقت الانتظار الأول
if (StrLen(key) = 1) {
    if (key = "z" || key = "Z") {
        if (ActiveClass = "Chrome_WidgetWin_1")
        {
            Input, key, L1 T3
            if (ErrorLevel = "Timeout")
                ExitApp  ; إنهاء إذا انتهى وقت الانتظار الثاني
            if (StrLen(key) = 1)
            {
                if (key = "z" || key = "Z")
                {
                    Send, ^+!\
                    Sleep, 100
                    Send, ^+!r
                    ExitApp
                }
                else if (key = "]")
                {
                    Send, ^+!]
                    Sleep, 10
                    Send, ]
                    Sleep, 10
                    Send, ^+!]
                    Sleep, 10
                    Send, i
                    Input, AnyKey, L1 T10
                    Send, ^+!r
                    ExitApp
                }
                else if (key = "[")
                {
                    Send, ^+!]
                    Sleep, 10
                    Send, p
                    Sleep, 10
                    Send, ^+!]
                    Sleep, 10
                    Send, i
                    Input, AnyKey, L1 T10
                    Send, ^+!r
                    ExitApp
                }
                else if (key = "p" || key = "P")
                {
                    Send, ^+!]
                    Sleep, 10
                    Send, [
                    Sleep, 10
                    Send, ^+!]
                    Sleep, 10
                    Send, ^p
                    Input, AnyKey, L1 T10
                    Send, ^+!r
                    ExitApp
                }
                ExitApp
            }
        }
        else {
            Send, ^+!%key%
            ExitApp
        }
    }
    else
    {
        Send, ^+!%key%
        ExitApp
    }
}
else
{
    Input, key, L1
    ExitApp
}
ExitApp  ; إنهاء افتراضي إذا لم يتم إدخال شيء

==================================================

